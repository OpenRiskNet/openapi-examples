{
  "swagger": "2.0",
  "info": {
    "description": "RESTful API Webservice to WEKA Machine Learning Algorithms.\nThis webservice provides an [OpenRiskNet](https://openrisknet.org/) compliant REST interface to machine learning algorithms from the WEKA Java Library.\nThis application is developed by the [Institute of Computer Science](http://www.datamining.informatik.uni-mainz.de) at the Johannes Gutenberg University Mainz.\nOpenRiskNet is funded by the European Commission GA 731075. WEKA is developed by the [Machine Learning Group](https://www.cs.waikato.ac.nz/ml/index.html) at the University of Waikato.",
    "version": "0.0.4",
    "title": "JGU WEKA REST Service",
    "termsOfService": "",
    "contact": {
      "email": "rautenberg@uni-mainz.de"
    },
    "license": {
      "name": "GNU General Public License 3",
      "url": "https://www.gnu.org/licenses/gpl-3.0.de.html"
    },
    "x-orn-@project": {
      "name": "OpenRiskNet",
      "cordis": "http://www.cordis.europa.eu/project/rcn/206759_en.html",
      "type": "H2020"
    },
    "x-orn-@context": {
      "@vocab": "http://schema.org/"
    }
  },
  "x-orn-@type": "x-orn:Service",
  "x-orn-@id": "weka rest service",
  "tags": [
    {
      "name": "algorithm"
    },
    {
      "name": "api"
    },
    {
      "name": "authorization"
    },
    {
      "name": "cluster"
    },
    {
      "name": "dataset"
    },
    {
      "name": "model"
    }
  ],
  "paths": {
    "/algorithm": {
      "get": {
        "tags": [
          "algorithm"
        ],
        "summary": "Get a list of all available algorithms.",
        "description": "Get a list of all algorithms.",
        "operationId": "algorithmGet",
        "produces": [
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "requested Content-Type",
            "required": true,
            "type": "string",
            "enum": [
              "text/uri-list",
              "application/json"
            ]
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/api.json": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "",
        "description": "Get swagger api in JSON",
        "operationId": "apiApiJsonGet",
        "produces": [
          "application/json",
          "application/ld+json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/algorithm/BayesNet": {
      "post": {
        "tags": [
          "algorithm"
        ],
        "summary": "REST interface to the WEKA BayesNet classifier.",
        "description": "REST interface to the WEKA BayesNet classifier. Save the model by POST request the content-type text/uri-list.",
        "operationId": "algorithmBayesNetPost",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "datasetURI",
            "in": "formData",
            "description": "Dataset URI or local dataset ID (to the arff representation of a dataset).",
            "required": false,
            "type": "string"
          },
          {
            "name": "estimator",
            "in": "formData",
            "description": "The estimator algorithm to be used in the compound. Must be SimpleEstimator,  MultiNomialBMAEstimator, BMAEstimator or BayesNetEstimator (Default: SimpleEstimator).",
            "required": false,
            "type": "string",
            "default": "SimpleEstimator",
            "enum": [
              "SimpleEstimator",
              "MultiNomialBMAEstimator",
              "BMAEstimator",
              "BayesNetEstimator"
            ]
          },
          {
            "name": "estimatorParams",
            "in": "formData",
            "description": "The parameter for the estimator to be used in the compound.  Must be of type double (Default: 0.5).",
            "required": false,
            "type": "number",
            "default": 0.5
          },
          {
            "name": "useADTree",
            "in": "formData",
            "description": "Whether to use ADTrees for searching (using will increase the speed of the search, but will also raise the memory use (Default: 0).",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "searchAlgorithm",
            "in": "formData",
            "description": "The algorithmn to be used for searching in the compound. Must be local.K2, local.GeneticSearch, local.HillClimber, local.LAGDHillClimber, local.RepeatedHillClimber, local.SimulatedAnnealing, local.TabuSearch, local.TAN, global.K2, global.GeneticSearch, global.HillClimber, global.RepeatedHillClimber, global.SimulatedAnnealing, global.TabuSearch, global.TAN, ci.CISearchAlgorithm, ci.ICSSearchAlgorithm (Default: local.K2).",
            "required": false,
            "type": "string",
            "default": "local.K2",
            "enum": [
              "local.K2",
              "local.GeneticSearch",
              "local.HillClimber",
              "local.LAGDHillClimber",
              "local.RepeatedHillClimber",
              "local.SimulatedAnnealing",
              "local.TabuSearch",
              "local.TAN",
              "global.K2",
              "global.GeneticSearch",
              "global.HillClimber",
              "global.RepeatedHillClimber",
              "global.SimulatedAnnealing",
              "global.TabuSearch",
              "global.TAN",
              "ci.CISearchAlgorithm",
              "ci.ICSSearchAlgorithm"
            ]
          },
          {
            "name": "searchParams",
            "in": "formData",
            "description": "The parameter for algorithmn to be used for searching in the compound. Are set automatically (WEKA's standard parameter setting).",
            "required": false,
            "type": "string",
            "default": "-P 1 -S BAYES"
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "x-algorithm": {
          "http://purl.obolibrary.org/obo/IAO_0000064": "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002": "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014": "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001": "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet": "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005": "http://purl.enanomapper.org/onto/ENM_8000014"
        }
      }
    },
    "/algorithm/linearRegression": {
      "post": {
        "tags": [
          "algorithm"
        ],
        "summary": "REST interface to the WEKA linear regression classifier.",
        "description": "REST interface to the WEKA linear regression classifier. Save the model by POST request the content-type text/uri-list.",
        "operationId": "algorithmLRPost",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "datasetURI",
            "in": "formData",
            "description": "Dataset URI or local dataset ID (to the arff representation of a dataset).",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributeSelectionMethod",
            "in": "formData",
            "description": "Attribute selection method to be used (Default M5 method).Available methods are: no attribute selection(Value:1), attribute selection using M5's method (Value:0) and a greedy selection using the Akaike information metric(Value:2). One of 0,1,2 (Default: 0).",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "name": "eliminateColinearAttributes",
            "in": "formData",
            "description": "Whether to eliminate colinear attributes. Must be 0 or 1 (Default: 1).",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "ridge",
            "in": "formData",
            "description": "The ridge parameter (Default: 1.0E-8).",
            "required": false,
            "type": "number",
            "default": 1e-8
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "x-algorithm": {
          "Linear Regression": "https://en.wikipedia.org/wiki/Linear_regression"
        }
      }
    },
    "/algorithm/libsvm": {
      "post": {
        "tags": [
          "algorithm"
        ],
        "summary": "REST interface to the WEKA support vector machine wrapper library classifier.",
        "description": "REST interface to the WEKA support vector machine wrapper library classifier.Save the model by POST request the content-type text/uri-list.",
        "operationId": "algorithmLibSVMPost",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "datasetURI",
            "in": "formData",
            "description": "Dataset URI or local dataset ID (to the arff representation of a dataset).",
            "required": false,
            "type": "string"
          },
          {
            "name": "svmType",
            "in": "formData",
            "description": "SVMType -- The type of SVM to use. \n 0: C-SVC (classification) \n 1: nu-SVC (classification) \n 2: one-class SVM (classification) \n 3: epsilon-SVR (regression)\n 4: nu-SVR (regression)\n (Default: 0).",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ]
          },
          {
            "name": "coef0",
            "in": "formData",
            "description": "coef0 -- The coefficient to use. (Default: 0).",
            "required": false,
            "type": "number",
            "default": 0,
            "format": "float"
          },
          {
            "name": "cost",
            "in": "formData",
            "description": "cost -- The cost parameter C for C-SVC, epsilon-SVR and nu-SVR. (Default: 1.0).",
            "required": false,
            "type": "number",
            "default": 1,
            "format": "float"
          },
          {
            "name": "degree",
            "in": "formData",
            "description": "degree -- The degree of the kernel. (Default: 3).",
            "required": false,
            "type": "integer",
            "default": 3,
            "format": "int32"
          },
          {
            "name": "eps",
            "in": "formData",
            "description": "eps -- The tolerance of the termination criterion. (Default: 0.001).",
            "required": false,
            "type": "number",
            "default": 0.001
          },
          {
            "name": "gamma",
            "in": "formData",
            "description": "gamma -- The gamma to use, if 0 then 1/max_index is used. (Default: 0.0).",
            "required": false,
            "type": "number",
            "default": 0
          },
          {
            "name": "kernelType",
            "in": "formData",
            "description": "kernelType -- The type of kernel to use.\n 0: linear:u'*v \n 1: polynomial: (gamma*u'*v + coef0)^degree \n 2: radial basis function: exp(-gamma*|u-v|^2) \n 3: sigmoid: tanh()gamma*u'*v + coef0) \n (Default: 2).",
            "required": false,
            "type": "integer",
            "default": 2,
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              3
            ]
          },
          {
            "name": "loss",
            "in": "formData",
            "description": "loss -- The epsilon for the loss function in epsilon-SVR. (Default: 0.1).",
            "required": false,
            "type": "number",
            "default": 0.1
          },
          {
            "name": "normalize",
            "in": "formData",
            "description": "normalize -- Whether to normalize the data.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "nu",
            "in": "formData",
            "description": "nu -- The value of nu for nu-SVC, one-class SVM and nu-SVR. (Default: 0.5).",
            "required": false,
            "type": "number",
            "default": 0.5
          },
          {
            "name": "probabilityEstimates",
            "in": "formData",
            "description": "probabilityEstimates -- Whether to generate probability estimates instead of -1/+1 for classification problems.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "shrinking",
            "in": "formData",
            "description": "shrinking -- Whether to use the shrinking heuristic.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "weights",
            "in": "formData",
            "description": "weights -- The weights to use for the classes (blank-separated list, eg, \"1 1 1\" for a 3-class problem), if empty 1 is used by default.",
            "required": false,
            "type": "string"
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "x-algorithm": {
          "support vector machine": "https://en.wikipedia.org/wiki/Support_vector_machine"
        }
      }
    },
    "/algorithm/kNNclassification": {
      "post": {
        "tags": [
          "algorithm"
        ],
        "summary": "REST interface to the WEKA K-nearest neighbours classifier.",
        "description": "REST interface to the WEKA K-nearest neighbours classifier. Save the model by POST request the content-type text/uri-list.",
        "operationId": "algorithmKNNclassificationPost",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "datasetURI",
            "in": "formData",
            "description": "Dataset URI or local dataset ID (to the arff representation of a dataset).",
            "required": false,
            "type": "string"
          },
          {
            "name": "windowSize",
            "in": "formData",
            "description": "Gets the maximum number of instances allowed in the training pool. The addition of new instances above this value will result in old instances being removed. A value of 0 signifies no limit to the number of training instances. Must be 0 or 1 (Default: 0).",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "KNN",
            "in": "formData",
            "description": "The number of neighbors to use. Must be an integer greater than 0 (Default: 1).",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "crossValidate",
            "in": "formData",
            "description": "Whether hold-one-out cross-validation will be used to select the best k value. Must be 0 or 1 (Default: 0).",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "distanceWeighting",
            "in": "formData",
            "description": "May be 0 for no distance weighting, I for 1/distance or F for 1-distance. Must be 0, I or F (Default: 0).",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "meanSquared",
            "in": "formData",
            "description": "Whether the mean squared error is used rather than mean absolute error when doing cross-validation for regression problems. Must be 0 or 1 (Default: 0).",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "nearestNeighbourSearchAlgorithm",
            "in": "formData",
            "description": "The nearest neighbour search algorithm to use (Default: weka.core.neighboursearch.LinearNNSearch). Fixed.",
            "required": false,
            "type": "string",
            "default": "LinearNNSearch"
          },
          {
            "name": "save",
            "in": "formData",
            "description": "Save the model.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "Authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "x-algorithm": {
          "k-nearest neighbors algorithm": "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm"
        }
      }
    },
    "/algorithm/ZeroR": {
      "post": {
        "tags": [
          "algorithm"
        ],
        "summary": "REST interface to the WEKA ZeroR classifier.",
        "description": "REST interface to the WEKA ZeroR classifier. Save the model by POST request the content-type text/uri-list.",
        "operationId": "algorithmZeroRclassificationPost",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "datasetURI",
            "in": "formData",
            "description": "Dataset URI or local dataset ID (to the arff representation of a dataset).",
            "required": false,
            "type": "string"
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "x-algorithm": {
          "ZeroR": "http://weka.sourceforge.net/doc.dev/weka/classifiers/rules/ZeroR.html"
        }
      }
    },
    "/algorithm/M5Rules": {
      "post": {
        "tags": [
          "algorithm"
        ],
        "summary": "REST interface to the WEKA M5Rules classifier.",
        "description": "REST interface to the WEKA M5Rules classifier. Save the model by POST request the content-type text/uri-list.",
        "operationId": "algorithmM5RclassificationPost",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "datasetURI",
            "in": "formData",
            "description": "Dataset URI or local dataset ID (to the arff representation of a dataset).",
            "required": false,
            "type": "string"
          },
          {
            "name": "unpruned",
            "in": "formData",
            "description": "Whether pruning is performed.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "x-example": 0,
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "useUnsmoothed",
            "in": "formData",
            "description": "Whether to use unsmoothed predictions.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "minNumInstances",
            "in": "formData",
            "description": "The minimum number of instances to allow at a leaf node.",
            "required": false,
            "type": "number",
            "default": 4,
            "format": "double"
          },
          {
            "name": "buildRegressionTree",
            "in": "formData",
            "description": "Whether to generate a regression tree/rule instead of a model tree/rule.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "x-algorithm": {
          "M5Rules": "http://weka.sourceforge.net/doc.dev/weka/classifiers/rules/M5Rules.html"
        }
      }
    },
    "/algorithm/J48": {
      "post": {
        "tags": [
          "algorithm"
        ],
        "summary": "REST interface to the WEKA J48 classifier.",
        "description": "REST interface to the WEKA J48 classifier. Save the model by POST request the content-type text/uri-list.",
        "operationId": "algorithmJ48Post",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "datasetURI",
            "in": "formData",
            "description": "Dataset URI or local dataset ID (to the arff representation of a dataset).",
            "required": false,
            "type": "string"
          },
          {
            "name": "binarySplits",
            "in": "formData",
            "description": "Whether to use binary splits on nominal attributes when building the trees.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "confidenceFactor",
            "in": "formData",
            "description": "The confidence factor used for pruning (smaller values incur more pruning).",
            "required": false,
            "type": "number",
            "default": 0.25
          },
          {
            "name": "minNumObj",
            "in": "formData",
            "description": "The minimum number of instances per leaf.",
            "required": false,
            "type": "integer",
            "default": 2,
            "format": "int32"
          },
          {
            "name": "numFolds",
            "in": "formData",
            "description": "Determines the amount of data used for reduced-error pruning.  One fold is used for pruning, the rest for growing the tree",
            "required": false,
            "type": "integer",
            "default": 3,
            "format": "int32"
          },
          {
            "name": "reducedErrorPruning",
            "in": "formData",
            "description": "Whether reduced-error pruning is used instead of C.4.5 pruning.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "seed",
            "in": "formData",
            "description": "The seed used for randomizing the data when reduced-error pruning is used.",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "subtreeRaising",
            "in": "formData",
            "description": "Whether to consider the subtree raising operation when pruning.",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "unpruned",
            "in": "formData",
            "description": "Whether pruning is performed.",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "useLaplace",
            "in": "formData",
            "description": "Whether counts at leaves are smoothed based on Laplace.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "Authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "x-algorithm": {
          "J48": "https://en.wikipedia.org/wiki/C4.5_algorithm#Implementations"
        }
      }
    },
    "/aa/login": {
      "post": {
        "tags": [
          "authorization"
        ],
        "summary": "Request a security token.",
        "description": "Uses OpenAM server to get a security token.",
        "operationId": "login",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "description": "Username",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logged in - authentication token can be found in the response body (in JSON)"
          },
          "401": {
            "description": "Wrong, missing or insufficient credentials. Error report is produced."
          }
        }
      }
    },
    "/aa/logout": {
      "post": {
        "tags": [
          "authorization"
        ],
        "summary": "Invalidate a security token.",
        "description": "Invalidates a security token and logs out the corresponding user.",
        "operationId": "logout",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "subjectid",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token invalidated."
          },
          "401": {
            "description": "Wrong, missing or invalid token."
          }
        }
      }
    },
    "/cluster/EM": {
      "post": {
        "tags": [
          "cluster"
        ],
        "summary": "REST interface to the WEKA EM clusterer.",
        "description": "REST interface to the WEKA EM (expectation maximisation) clusterer.",
        "operationId": "clusterEMPost",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "datasetURI",
            "in": "formData",
            "description": "Dataset URI or local dataset ID (to the arff representation of a dataset).",
            "required": false,
            "type": "string"
          },
          {
            "name": "numFolds",
            "in": "formData",
            "description": "Number of folds to use when cross-validating to find the best number of clusters (default = 10)",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "numKMeansRuns",
            "in": "formData",
            "description": "Number of runs of k-means to perform (default = 10)",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "maximumNumberOfClusters",
            "in": "formData",
            "description": "Maximum number of clusters to consider during cross-validation to select the best number of clusters (default = -1).",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "numClusters",
            "in": "formData",
            "description": "The number of clusters. -1 to select number of clusters automatically by cross validation (default = -1).",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "maxIterations",
            "in": "formData",
            "description": "Maximum number of iterations (default = 100).",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          },
          {
            "name": "subjectid",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "x-algorithm": {
          "EM": "https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm"
        }
      }
    },
    "/dataset/{id}/arff": {
      "get": {
        "tags": [
          "dataset"
        ],
        "summary": "Get arff representation of a dataset.",
        "description": "Get arff representation of a dataset.",
        "operationId": "getDatasetArff",
        "produces": [
          "text/x-arff"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dataset ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "Authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        }
      }
    },
    "/dataset": {
      "get": {
        "tags": [
          "dataset"
        ],
        "summary": "List all converted datasets.",
        "description": "List all converted datasets.",
        "operationId": "list",
        "produces": [
          "text/uri-list",
          "application/json"
        ],
        "parameters": [
          {
            "name": "subjectid",
            "in": "header",
            "description": "Authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "dataset"
        ],
        "summary": "Download dataset and convert into weka arff format.",
        "description": "Download an external dataset and convert it into weka arff format. Save the dataset by POST request the content-type text/uri-list.",
        "operationId": "create",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "dataset_uri",
            "in": "formData",
            "description": "URI of the dataset to be used.",
            "required": true,
            "type": "string"
          },
          {
            "name": "class_uri",
            "in": "formData",
            "description": "URI of the feature to define as weka class",
            "required": false,
            "type": "string"
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "Authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        }
      }
    },
    "/dataset/{id}": {
      "post": {
        "tags": [
          "dataset"
        ],
        "summary": "Filter an internal dataset with weka filter.",
        "description": "Filter an internal dataset with weka filter. Remove attributes and normalize or standardize all numeric attributes of a dataset.Save the dataset by POST request the content-type text/uri-list.",
        "operationId": "filter",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff",
          "text/uri-list"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dataset ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "idx_remove",
            "in": "formData",
            "description": "Feature(s) to remove. ID or comma separated IDs of the attribute(s)(column(s)) to remove. (0 = no attribute will be deleted)",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "scale",
            "in": "formData",
            "description": "Normalize all numeric values - scale: - The factor for scaling the output range (default: 1).",
            "required": false,
            "type": "string"
          },
          {
            "name": "translation",
            "in": "formData",
            "description": "Normalize all numeric values - translation: The translation of the output range (default: 0).",
            "required": false,
            "type": "string"
          },
          {
            "name": "standardize",
            "in": "formData",
            "description": "Standardize all numeric attributes in the given dataset to have zero mean and unit variance (apart from the class attribute, if set).",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ignore",
            "in": "formData",
            "description": "Ignore class (ignore class attribute for Normalization or Standization).",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "attributeRange",
            "in": "formData",
            "description": "String to Nominal: Sets which attributes to process. This attributes must be string attributes (\"first\" and \"last\" are valid values as well as ranges and lists. Empty value do not process the filter).",
            "required": false,
            "type": "string"
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "Authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        }
      }
    },
    "/model/{id}": {
      "get": {
        "tags": [
          "model"
        ],
        "summary": "Get representation of a model.",
        "description": "Get representation of a model.",
        "operationId": "getModel",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "model ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "Authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "model"
        ],
        "summary": "Predict testdata with a model.",
        "description": "Predict testdata with a model.",
        "operationId": "modelPost",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/x-arff"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "datasetID",
            "in": "formData",
            "description": "Dataset ID (to the arff representation of a dataset).",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "model ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "subjectid",
            "in": "header",
            "description": "authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        }
      }
    },
    "/model": {
      "get": {
        "tags": [
          "model"
        ],
        "summary": "List all Models",
        "description": "List all Models.",
        "operationId": "getModelList",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/uri-list",
          "application/json"
        ],
        "parameters": [
          {
            "name": "subjectid",
            "in": "header",
            "description": "Authorization token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Resource Not Found"
          }
        }
      }
    }
  }
}