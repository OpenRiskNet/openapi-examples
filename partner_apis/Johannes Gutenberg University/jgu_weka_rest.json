{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "JGU WEKA REST Service",
    "description" : "This is a RESTful API Webservice for WEKA Machine Learning algorithms.\nThis webservice provides an [OpenRiskNet](https://openrisknet.org/) compliant REST interface for machine learning algorithms from the WEKA library.\n This service is developed by the [Institute of Computer Science](http://www.datamining.informatik.uni-mainz.de) at the Johannes Gutenberg University Mainz.\n\nOpenRiskNet is funded by the European Commission GA 731075.\nWEKA is developed by the [Machine Learning Group](https://www.cs.waikato.ac.nz/ml/index.html) at the University of Waikato.\n\nSee [Documentation](https://jguwekarest.github.io/jguwekarest/), [Issue Tracker](https://github.com/jguwekarest/jguwekarest/issues) and [Code](https://github.com/jguwekarest/jguwekarest) at Github.",
    "contact" : {
      "name" : "Data Mining Group, Institute of Computer Science, J.G.U. Mainz",
      "url" : "https://www.datamining.informatik.uni-mainz.de",
      "email" : "datamining@uni-mainz.de"
    },
    "license" : {
      "name" : "GNU General Public License 3",
      "url" : "https://www.gnu.org/licenses/gpl-3.0.html"
    },
    "version" : "0.5.1-OAS3"
  },
  "externalDocs" : {
    "description" : "JGU WEKA REST Service Documentation on GitHub",
    "url" : "https://jguwekarest.github.io/jguwekarest/"
  },
  "paths" : {
    "/algorithm" : {
      "get" : {
        "tags" : [ "algorithm" ],
        "summary" : "Get a list of algorithms.",
        "description" : "Get a list of all available algorithms.",
        "operationId" : "algorithmGet",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:AlgorithmList"
        },
        "x-orn-@id" : "/algorithm/generic"
      }
    },
    "/api/api.json" : {
      "get" : {
        "tags" : [ "api" ],
        "summary" : "Get Open API representation in JSON",
        "description" : "Get Open API representation in JSON",
        "operationId" : "apiApiJsonGet",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/algorithm/BayesNet" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA BayesNet classifier.",
        "description" : "REST interface to the WEKA BayesNet classifier. Returns a Task URI.",
        "operationId" : "algorithmBayesNetPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "estimator" : {
                    "type" : "string",
                    "description" : "The estimator algorithm to be used in the compound. Must be SimpleEstimator,  MultiNomialBMAEstimator, BMAEstimator or BayesNetEstimator (Default: SimpleEstimator).",
                    "example" : "SimpleEstimator",
                    "enum" : [ "SimpleEstimator", "MultiNomialBMAEstimator", "BMAEstimator", "BayesNetEstimator" ],
                    "default" : "SimpleEstimator"
                  },
                  "estimatorParams" : {
                    "type" : "number",
                    "description" : "The parameter for the estimator to be used in the compound.  Must be of type double (Default: 0.5).",
                    "example" : 0.5,
                    "default" : 0.5
                  },
                  "useADTree" : {
                    "type" : "integer",
                    "description" : "Whether to use ADTrees for searching (using will increase the speed of the search, but will also raise the memory use (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "searchAlgorithm" : {
                    "type" : "string",
                    "description" : "The algorithmn to be used for searching in the compound. Must be local.K2, local.GeneticSearch, local.HillClimber, local.LAGDHillClimber, local.RepeatedHillClimber, local.SimulatedAnnealing, local.TabuSearch, local.TAN, global.K2, global.GeneticSearch, global.HillClimber, global.RepeatedHillClimber, global.SimulatedAnnealing, global.TabuSearch, global.TAN, ci.CISearchAlgorithm, ci.ICSSearchAlgorithm (Default: local.K2).",
                    "enum" : [ "local.K2", "local.GeneticSearch", "local.HillClimber", "local.LAGDHillClimber", "local.RepeatedHillClimber", "local.SimulatedAnnealing", "local.TabuSearch", "local.TAN", "global.K2", "global.GeneticSearch", "global.HillClimber", "global.RepeatedHillClimber", "global.SimulatedAnnealing", "global.TabuSearch", "global.TAN", "ci.CISearchAlgorithm", "ci.ICSSearchAlgorithm" ],
                    "default" : "local.K2"
                  },
                  "searchParams" : {
                    "type" : "string",
                    "description" : "The parameter for algorithmn to be used for searching in the compound. Are set automatically (WEKA's standard parameter setting) (Default '-P 1 -S BAYES' for local.K2).",
                    "example" : "-P 1 -S BAYES",
                    "default" : "-P 1 -S BAYES"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet"
      }
    },
    "/algorithm/BayesNet/adaboost" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA AdaBoost M1 with BayesNet classifier.",
        "description" : "REST interface to the WEKA AdaBoost M1 with BayesNet classifier. Returns a Task URI.",
        "operationId" : "algorithmBayesNetAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Whether resampling is used instead of reweighting.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Weight threshold for weight pruning.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "estimator" : {
                    "type" : "string",
                    "description" : "The estimator algorithm to be used in the compound. Must be SimpleEstimator,  MultiNomialBMAEstimator, BMAEstimator or BayesNetEstimator (Default: SimpleEstimator).",
                    "example" : "SimpleEstimator",
                    "enum" : [ "SimpleEstimator", "MultiNomialBMAEstimator", "BMAEstimator", "BayesNetEstimator" ],
                    "default" : "SimpleEstimator"
                  },
                  "estimatorParams" : {
                    "type" : "number",
                    "description" : "The parameter for the estimator to be used in the compound.  Must be of type double (Default: 0.5).",
                    "example" : 0.5,
                    "default" : 0.5
                  },
                  "useADTree" : {
                    "type" : "integer",
                    "description" : "Whether to use ADTrees for searching (using will increase the speed of the search, but will also raise the memory use (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "searchAlgorithm" : {
                    "type" : "string",
                    "description" : "The algorithmn to be used for searching in the compound. Must be local.K2, local.GeneticSearch, local.HillClimber, local.LAGDHillClimber, local.RepeatedHillClimber, local.SimulatedAnnealing, local.TabuSearch, local.TAN, global.K2, global.GeneticSearch, global.HillClimber, global.RepeatedHillClimber, global.SimulatedAnnealing, global.TabuSearch, global.TAN, ci.CISearchAlgorithm, ci.ICSSearchAlgorithm (Default: local.K2).",
                    "enum" : [ "local.K2", "local.GeneticSearch", "local.HillClimber", "local.LAGDHillClimber", "local.RepeatedHillClimber", "local.SimulatedAnnealing", "local.TabuSearch", "local.TAN", "global.K2", "global.GeneticSearch", "global.HillClimber", "global.RepeatedHillClimber", "global.SimulatedAnnealing", "global.TabuSearch", "global.TAN", "ci.CISearchAlgorithm", "ci.ICSSearchAlgorithm" ],
                    "default" : "local.K2"
                  },
                  "searchParams" : {
                    "type" : "string",
                    "description" : "The parameter for algorithmn to be used for searching in the compound. Are set automatically (WEKA's standard parameter setting) (Default '-P 1 -S BAYES' for local.K2).",
                    "example" : "-P 1 -S BAYES",
                    "default" : "-P 1 -S BAYES"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet/adaboost"
      }
    },
    "/algorithm/BayesNet/bagging" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Bagging with BayesNet classifier.",
        "description" : "REST interface to the WEKA Bagging with BayesNet BayesNet classifier. Returns a Task URI.",
        "operationId" : "algorithmBayesNetBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "description" : "Bagging: Size of each bag, as a percentage of the training set size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Bagging: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Bagging: The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "estimator" : {
                    "type" : "string",
                    "description" : "The estimator algorithm to be used in the compound. Must be SimpleEstimator,  MultiNomialBMAEstimator, BMAEstimator or BayesNetEstimator (Default: SimpleEstimator).",
                    "example" : "SimpleEstimator",
                    "enum" : [ "SimpleEstimator", "MultiNomialBMAEstimator", "BMAEstimator", "BayesNetEstimator" ],
                    "default" : "SimpleEstimator"
                  },
                  "estimatorParams" : {
                    "type" : "number",
                    "description" : "The parameter for the estimator to be used in the compound.  Must be of type double (Default: 0.5).",
                    "example" : 0.5,
                    "default" : 0.5
                  },
                  "useADTree" : {
                    "type" : "integer",
                    "description" : "Whether to use ADTrees for searching (using will increase the speed of the search, but will also raise the memory use (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "searchAlgorithm" : {
                    "type" : "string",
                    "description" : "The algorithmn to be used for searching in the compound. Must be local.K2, local.GeneticSearch, local.HillClimber, local.LAGDHillClimber, local.RepeatedHillClimber, local.SimulatedAnnealing, local.TabuSearch, local.TAN, global.K2, global.GeneticSearch, global.HillClimber, global.RepeatedHillClimber, global.SimulatedAnnealing, global.TabuSearch, global.TAN, ci.CISearchAlgorithm, ci.ICSSearchAlgorithm (Default: local.K2).",
                    "enum" : [ "local.K2", "local.GeneticSearch", "local.HillClimber", "local.LAGDHillClimber", "local.RepeatedHillClimber", "local.SimulatedAnnealing", "local.TabuSearch", "local.TAN", "global.K2", "global.GeneticSearch", "global.HillClimber", "global.RepeatedHillClimber", "global.SimulatedAnnealing", "global.TabuSearch", "global.TAN", "ci.CISearchAlgorithm", "ci.ICSSearchAlgorithm" ],
                    "default" : "local.K2"
                  },
                  "searchParams" : {
                    "type" : "string",
                    "description" : "The parameter for algorithmn to be used for searching in the compound. Are set automatically (WEKA's standard parameter setting) (Default '-P 1 -S BAYES' for local.K2).",
                    "example" : "-P 1 -S BAYES",
                    "default" : "-P 1 -S BAYES"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet/adaboost"
      }
    },
    "/algorithm/NaiveBayes" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA BayesNet classifier.",
        "description" : "REST interface to the WEKA BayesNet classifier. Returns a Task URI.",
        "operationId" : "algorithmNaiveBayesPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "useKernelEstimator" : {
                    "type" : "integer",
                    "description" : "Use a kernel estimator for numeric attributes rather than a normal distribution. (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useSupervisedDiscretization" : {
                    "type" : "number",
                    "description" : "Use supervised discretization to convert numeric attributes to nominal ones. (Default: 0). Works not together with useKernelEstimator=1.",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet"
      }
    },
    "/algorithm/NaiveBayes/adaboost" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA  AdaBoost M1 with NaiveBayes classifier.",
        "description" : "REST interface to the WEKA  AdaBoost M1 with NaiveBayes classifier. Returns a Task URI.",
        "operationId" : "algorithmNaiveBayesAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Whether resampling is used instead of reweighting.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Weight threshold for weight pruning.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "useKernelEstimator" : {
                    "type" : "integer",
                    "description" : "Use a kernel estimator for numeric attributes rather than a normal distribution. (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useSupervisedDiscretization" : {
                    "type" : "number",
                    "description" : "Use supervised discretization to convert numeric attributes to nominal ones. (Default: 0). Works not together with useKernelEstimator=1.",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet"
      }
    },
    "/algorithm/NaiveBayes/bagging" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA Bagging with NaiveBayes classifier.",
        "description" : "REST interface to the WEKA Bagging with NaiveBayes classifier. Returns a Task URI.",
        "operationId" : "algorithmNaiveBayesBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "description" : "Bagging: Size of each bag, as a percentage of the training set size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Bagging: The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "useKernelEstimator" : {
                    "type" : "integer",
                    "description" : "Use a kernel estimator for numeric attributes rather than a normal distribution. (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useSupervisedDiscretization" : {
                    "type" : "number",
                    "description" : "Use supervised discretization to convert numeric attributes to nominal ones. (Default: 0). Works not together with useKernelEstimator=1.",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet"
      }
    },
    "/algorithm/linearRegression" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA linear regression classifier.",
        "description" : "REST interface to the WEKA linear regression classifier. Returns a Task URI.",
        "operationId" : "algorithmLRPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "attributeSelectionMethod" : {
                    "type" : "integer",
                    "description" : "Attribute selection method to be used (Default M5 method).Available methods are: no attribute selection(Value:1), attribute selection using M5's method (Value:0) and a greedy selection using the Akaike information metric(Value:2). One of 0,1,2 (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2 ],
                    "default" : 0
                  },
                  "eliminateColinearAttributes" : {
                    "type" : "integer",
                    "description" : "Whether to eliminate colinear attributes. Must be 0 or 1 (Default: 1).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "ridge" : {
                    "type" : "number",
                    "description" : "The ridge parameter (Default: 1.0E-8).",
                    "default" : 1.0E-8
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Linear Regression" : "https://en.wikipedia.org/wiki/Linear_regression"
        },
        "x-orn-@id" : "/algorithm/linearRegression"
      }
    },
    "/algorithm/linearRegression/adaboost" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Bagging with linear regression classifier.",
        "description" : "REST interface to the WEKA Bagging with linear regression classifier. Returns a Task URI.",
        "operationId" : "algorithmLRAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Whether resampling is used instead of reweighting.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Weight threshold for weight pruning.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "attributeSelectionMethod" : {
                    "type" : "integer",
                    "description" : "Attribute selection method to be used (Default M5 method).Available methods are: no attribute selection(Value:1), attribute selection using M5's method (Value:0) and a greedy selection using the Akaike information metric(Value:2). One of 0,1,2 (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2 ],
                    "default" : 0
                  },
                  "eliminateColinearAttributes" : {
                    "type" : "integer",
                    "description" : "Whether to eliminate colinear attributes. Must be 0 or 1 (Default: 1).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "ridge" : {
                    "type" : "number",
                    "description" : "The ridge parameter (Default: 1.0E-8).",
                    "default" : 1.0E-8
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Linear Regression" : "https://en.wikipedia.org/wiki/Linear_regression"
        },
        "x-orn-@id" : "/algorithm/linearRegression/adaboost"
      }
    },
    "/algorithm/linearRegression/bagging" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Bagging with linear regression classifier.",
        "description" : "REST interface to the WEKA linear Bagging with regression classifier. Returns a Task URI.",
        "operationId" : "algorithmLRBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "description" : "Bagging: Size of each bag, as a percentage of the training set size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Bagging: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Bagging: The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "attributeSelectionMethod" : {
                    "type" : "integer",
                    "description" : "Attribute selection method to be used (Default M5 method).Available methods are: no attribute selection(Value:1), attribute selection using M5's method (Value:0) and a greedy selection using the Akaike information metric(Value:2). One of 0,1,2 (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2 ],
                    "default" : 0
                  },
                  "eliminateColinearAttributes" : {
                    "type" : "integer",
                    "description" : "Whether to eliminate colinear attributes. Must be 0 or 1 (Default: 1).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "ridge" : {
                    "type" : "number",
                    "description" : "The ridge parameter (Default: 1.0E-8).",
                    "default" : 1.0E-8
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Linear Regression" : "https://en.wikipedia.org/wiki/Linear_regression"
        },
        "x-orn-@id" : "/algorithm/linearRegression/bagging"
      }
    },
    "/algorithm/libsvm" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA support vector machine wrapper library classifier.",
        "description" : "REST interface to the WEKA support vector machine wrapper library classifier.Returns a Task URI.",
        "operationId" : "algorithmLibSVMPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "svmType" : {
                    "type" : "integer",
                    "description" : "SVMType -- The type of SVM to use. \n 0: C-SVC (classification) \n 1: nu-SVC (classification) \n 2: one-class SVM (classification) \n 3: epsilon-SVR (regression)\n 4: nu-SVR (regression)\n (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3, 4 ],
                    "default" : 0
                  },
                  "coef0" : {
                    "type" : "number",
                    "description" : "coef0 -- The coefficient to use. (Default: 0).",
                    "format" : "float",
                    "default" : 0
                  },
                  "cost" : {
                    "type" : "number",
                    "description" : "cost -- The cost parameter C for C-SVC, epsilon-SVR and nu-SVR. (Default: 1.0).",
                    "format" : "float",
                    "default" : 1.0
                  },
                  "degree" : {
                    "type" : "integer",
                    "description" : "degree -- The degree of the kernel. (Default: 3).",
                    "format" : "int32",
                    "default" : 3
                  },
                  "eps" : {
                    "type" : "number",
                    "description" : "eps -- The tolerance of the termination criterion. (Default: 0.001).",
                    "default" : 0.001
                  },
                  "gamma" : {
                    "type" : "number",
                    "description" : "gamma -- The gamma to use, if 0 then 1/max_index is used. (Default: 0.0).",
                    "default" : 0.0
                  },
                  "kernelType" : {
                    "type" : "integer",
                    "description" : "kernelType -- The type of kernel to use.\n 0: linear:u'*v \n 1: polynomial: (gamma*u'*v + coef0)^degree \n 2: radial basis function: exp(-gamma*|u-v|^2) \n 3: sigmoid: tanh()gamma*u'*v + coef0) \n (Default: 2).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3 ],
                    "default" : 2
                  },
                  "loss" : {
                    "type" : "number",
                    "description" : "loss -- The epsilon for the loss function in epsilon-SVR. (Default: 0.1).",
                    "default" : 0.1
                  },
                  "normalize" : {
                    "type" : "boolean",
                    "description" : "normalize -- Whether to normalize the data.",
                    "default" : false
                  },
                  "nu" : {
                    "type" : "number",
                    "description" : "nu -- The value of nu for nu-SVC, one-class SVM and nu-SVR. (Default: 0.5).",
                    "default" : 0.5
                  },
                  "probabilityEstimates" : {
                    "type" : "boolean",
                    "description" : "probabilityEstimates -- Whether to generate probability estimates instead of -1/+1 for classification problems.",
                    "default" : false
                  },
                  "shrinking" : {
                    "type" : "boolean",
                    "description" : "shrinking -- Whether to use the shrinking heuristic.",
                    "default" : true
                  },
                  "weights" : {
                    "type" : "string",
                    "description" : "weights -- The weights to use for the classes (blank-separated list, eg, \"1 1 1\" for a 3-class problem), if empty 1 is used by default."
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "support vector machine" : "https://en.wikipedia.org/wiki/Support_vector_machine"
        },
        "x-orn-@id" : "/algorithm/libsvm"
      }
    },
    "/algorithm/libsvm/adaboost" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA support vector machine wrapper library classifier.",
        "description" : "REST interface to the WEKA support vector machine wrapper library classifier.Returns a Task URI.",
        "operationId" : "algorithmLibSVMAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Whether resampling is used instead of reweighting.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Weight threshold for weight pruning.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "svmType" : {
                    "type" : "integer",
                    "description" : "SVMType -- The type of SVM to use. \n 0: C-SVC (classification) \n 1: nu-SVC (classification) \n 2: one-class SVM (classification) \n 3: epsilon-SVR (regression)\n 4: nu-SVR (regression)\n (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3, 4 ],
                    "default" : 0
                  },
                  "coef0" : {
                    "type" : "number",
                    "description" : "coef0 -- The coefficient to use. (Default: 0).",
                    "format" : "float",
                    "default" : 0
                  },
                  "cost" : {
                    "type" : "number",
                    "description" : "cost -- The cost parameter C for C-SVC, epsilon-SVR and nu-SVR. (Default: 1.0).",
                    "format" : "float",
                    "default" : 1.0
                  },
                  "degree" : {
                    "type" : "integer",
                    "description" : "degree -- The degree of the kernel. (Default: 3).",
                    "format" : "int32",
                    "default" : 3
                  },
                  "eps" : {
                    "type" : "number",
                    "description" : "eps -- The tolerance of the termination criterion. (Default: 0.001).",
                    "default" : 0.001
                  },
                  "gamma" : {
                    "type" : "number",
                    "description" : "gamma -- The gamma to use, if 0 then 1/max_index is used. (Default: 0.0).",
                    "default" : 0.0
                  },
                  "kernelType" : {
                    "type" : "integer",
                    "description" : "kernelType -- The type of kernel to use.\n 0: linear:u'*v \n 1: polynomial: (gamma*u'*v + coef0)^degree \n 2: radial basis function: exp(-gamma*|u-v|^2) \n 3: sigmoid: tanh()gamma*u'*v + coef0) \n (Default: 2).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3 ],
                    "default" : 2
                  },
                  "loss" : {
                    "type" : "number",
                    "description" : "loss -- The epsilon for the loss function in epsilon-SVR. (Default: 0.1).",
                    "default" : 0.1
                  },
                  "normalize" : {
                    "type" : "boolean",
                    "description" : "normalize -- Whether to normalize the data.",
                    "default" : false
                  },
                  "nu" : {
                    "type" : "number",
                    "description" : "nu -- The value of nu for nu-SVC, one-class SVM and nu-SVR. (Default: 0.5).",
                    "default" : 0.5
                  },
                  "probabilityEstimates" : {
                    "type" : "boolean",
                    "description" : "probabilityEstimates -- Whether to generate probability estimates instead of -1/+1 for classification problems.",
                    "default" : false
                  },
                  "shrinking" : {
                    "type" : "boolean",
                    "description" : "shrinking -- Whether to use the shrinking heuristic.",
                    "default" : true
                  },
                  "weights" : {
                    "type" : "string",
                    "description" : "weights -- The weights to use for the classes (blank-separated list, eg, \"1 1 1\" for a 3-class problem), if empty 1 is used by default."
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "support vector machine" : "https://en.wikipedia.org/wiki/Support_vector_machine"
        },
        "x-orn-@id" : "/algorithm/libsvm/adaboost"
      }
    },
    "/algorithm/libsvm/bagging" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA support vector machine wrapper library classifier.",
        "description" : "REST interface to the WEKA support vector machine wrapper library classifier.Returns a Task URI.",
        "operationId" : "algorithmLibSVMBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "description" : "Bagging: Size of each bag, as a percentage of the training set size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Bagging: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Bagging: The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "svmType" : {
                    "type" : "integer",
                    "description" : "SVMType -- The type of SVM to use. \n 0: C-SVC (classification) \n 1: nu-SVC (classification) \n 2: one-class SVM (classification) \n 3: epsilon-SVR (regression)\n 4: nu-SVR (regression)\n (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3, 4 ],
                    "default" : 0
                  },
                  "coef0" : {
                    "type" : "number",
                    "description" : "coef0 -- The coefficient to use. (Default: 0).",
                    "format" : "float",
                    "default" : 0
                  },
                  "cost" : {
                    "type" : "number",
                    "description" : "cost -- The cost parameter C for C-SVC, epsilon-SVR and nu-SVR. (Default: 1.0).",
                    "format" : "float",
                    "default" : 1.0
                  },
                  "degree" : {
                    "type" : "integer",
                    "description" : "degree -- The degree of the kernel. (Default: 3).",
                    "format" : "int32",
                    "default" : 3
                  },
                  "eps" : {
                    "type" : "number",
                    "description" : "eps -- The tolerance of the termination criterion. (Default: 0.001).",
                    "default" : 0.001
                  },
                  "gamma" : {
                    "type" : "number",
                    "description" : "gamma -- The gamma to use, if 0 then 1/max_index is used. (Default: 0.0).",
                    "default" : 0.0
                  },
                  "kernelType" : {
                    "type" : "integer",
                    "description" : "kernelType -- The type of kernel to use.\n 0: linear:u'*v \n 1: polynomial: (gamma*u'*v + coef0)^degree \n 2: radial basis function: exp(-gamma*|u-v|^2) \n 3: sigmoid: tanh()gamma*u'*v + coef0) \n (Default: 2).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3 ],
                    "default" : 2
                  },
                  "loss" : {
                    "type" : "number",
                    "description" : "loss -- The epsilon for the loss function in epsilon-SVR. (Default: 0.1).",
                    "default" : 0.1
                  },
                  "normalize" : {
                    "type" : "boolean",
                    "description" : "normalize -- Whether to normalize the data.",
                    "default" : false
                  },
                  "nu" : {
                    "type" : "number",
                    "description" : "nu -- The value of nu for nu-SVC, one-class SVM and nu-SVR. (Default: 0.5).",
                    "default" : 0.5
                  },
                  "probabilityEstimates" : {
                    "type" : "boolean",
                    "description" : "probabilityEstimates -- Whether to generate probability estimates instead of -1/+1 for classification problems.",
                    "default" : false
                  },
                  "shrinking" : {
                    "type" : "boolean",
                    "description" : "shrinking -- Whether to use the shrinking heuristic.",
                    "default" : true
                  },
                  "weights" : {
                    "type" : "string",
                    "description" : "weights -- The weights to use for the classes (blank-separated list, eg, \"1 1 1\" for a 3-class problem), if empty 1 is used by default."
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "support vector machine" : "https://en.wikipedia.org/wiki/Support_vector_machine"
        },
        "x-orn-@id" : "/algorithm/libsvm/bagging"
      }
    },
    "/algorithm/logistic" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA logistic classifier.",
        "description" : "REST interface to the WEKA logistic classifier. Logistic class for building and using a multinomial logistic regression model with a ridge estimator. Returns a Task URI.",
        "operationId" : "algorithmLogisticPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "ridge" : {
                    "type" : "number",
                    "description" : "Set the Ridge value in the log-likelihood."
                  },
                  "useConjugateGradientDescent" : {
                    "type" : "boolean",
                    "description" : "Use conjugate gradient descent rather than BFGS updates; faster for problems with many parameters."
                  },
                  "maxIts" : {
                    "type" : "integer",
                    "description" : "Maximum number of iterations to perform.",
                    "format" : "int32"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "support vector machine" : "https://en.wikipedia.org/wiki/Multinomial_logistic_regression"
        },
        "x-orn-@id" : "/algorithm/logistic"
      }
    },
    "/algorithm/MultilayerPerceptron" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA logistic classifier.",
        "description" : "REST interface to the WEKA logistic classifier. Logistic class for building and using a multinomial logistic regression model with a ridge estimator. Returns a Task URI.",
        "operationId" : "algorithmMultilayerPerceptronPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "momentum" : {
                    "type" : "number",
                    "description" : "Momentum applied to the weights during updating.",
                    "format" : "double",
                    "example" : 0.2,
                    "default" : 0.2
                  },
                  "nominalToBinaryFilter" : {
                    "type" : "boolean",
                    "description" : "This will preprocess the instances with the filter. This could help improve performance if there are nominal attributes in the data.",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "hiddenLayers" : {
                    "type" : "string",
                    "description" : "This defines the hidden layers of the neural network. This is a list of positive whole numbers. 1 for each hidden layer. Comma seperated. #To have no hidden layers put a single 0 here. This will only be used if autobuild is set. There are also wildcard values 'a' = (attribs + classes) / 2, 'i' = attribs, 'o' = classes , 't' = attribs + classes.",
                    "example" : "a",
                    "default" : "a"
                  },
                  "validationThreshold" : {
                    "type" : "integer",
                    "description" : "Used to terminate validation testing.The value here dictates how many times in a row the validation set error can get worse before training is terminated.",
                    "format" : "int32",
                    "example" : 20,
                    "default" : 20
                  },
                  "normalizeAttributes" : {
                    "type" : "boolean",
                    "description" : "This will normalize the attributes. This could help improve performance of the network. This is not reliant on the class being numeric. This will also normalize nominal attributes as well (after they have been run through the nominal to binary filter if that is in use) so that the nominal values are between -1 and 1",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "numDecimalPlaces" : {
                    "type" : "integer",
                    "description" : "The number of decimal places to be used for the output of numbers in the model.",
                    "format" : "int32"
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "decay" : {
                    "type" : "boolean",
                    "description" : "This will cause the learning rate to decrease. This will divide the starting learning rate by the epoch number, to determine what the current learning rate should be. This may help to stop the network from diverging from the target output, as well as improve general performance. Note that the decaying learning rate will not be shown in the gui, only the original learning rate. If the learning rate is changed in the gui, this is treated as the starting learning rate.",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "validationSetSize" : {
                    "type" : "integer",
                    "description" : "The percentage size of the validation set.(The training will continue until it is observed that the error on the validation set has been consistently getting worse, or if the training time is reached).  If This is set to zero no validation set will be used and instead the network will train for the specified number of epochs.",
                    "format" : "int32",
                    "example" : 0,
                    "default" : 0
                  },
                  "trainingTime" : {
                    "type" : "integer",
                    "description" : "The number of epochs to train through. If the validation set is non-zero then it can terminate the network early",
                    "format" : "int32",
                    "example" : 500,
                    "default" : 500
                  },
                  "normalizeNumericClass" : {
                    "type" : "boolean",
                    "description" : "This will normalize the class if it's numeric. This could help improve performance of the network, It normalizes the class to be between -1 and 1. Note that this is only internally, the output will be scaled back to the original range.",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "learningRate" : {
                    "type" : "number",
                    "description" : "The amount the weights are updated.",
                    "format" : "double",
                    "example" : 0.3,
                    "default" : 0.3
                  },
                  "reset" : {
                    "type" : "boolean",
                    "description" : "This will allow the network to reset with a lower learning rate. If the network diverges from the answer this will automatically reset the network with a lower learning rate and begin training again. This option is only available if the gui is not set. Note that if the network diverges but isn't allowed to reset it will fail the training process and return an error message.",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Multilayer Perceptron" : "https://en.wikipedia.org/wiki/Multilayer_perceptron"
        },
        "x-orn-@id" : "/algorithm/MultilayerPerceptron"
      }
    },
    "/algorithm/SMO" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA SMO classifier.",
        "description" : "REST interface to the WEKA SMO classifier. Returns a Task URI.",
        "operationId" : "algorithmSMOPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "numFolds" : {
                    "minimum" : -1,
                    "type" : "integer",
                    "description" : "The number of folds for cross-validation used to generate training data for calibration models (-1 means use training data).",
                    "format" : "int32",
                    "example" : -1,
                    "default" : -1
                  },
                  "c" : {
                    "type" : "number",
                    "description" : "The complexity parameter C.",
                    "format" : "double",
                    "example" : 1.0,
                    "default" : 1.0
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "kernel" : {
                    "type" : "string",
                    "description" : "The kernel to use.",
                    "example" : "weka.classifiers.functions.supportVector.PolyKernel -E 1.0 -C 250007",
                    "default" : "weka.classifiers.functions.supportVector.PolyKernel -E 1.0 -C 250007"
                  },
                  "filterType" : {
                    "type" : "integer",
                    "description" : "Determines how/if the data will be transformed. (0=normalize training data, 1=standardize training data, 2=no mormalization/standardization",
                    "format" : "int32",
                    "example" : 0,
                    "enum" : [ 0, 1, 2 ],
                    "default" : 0
                  },
                  "calibrator" : {
                    "type" : "string",
                    "description" : "The calibration method to use. ",
                    "example" : "weka.classifiers.functions.Logistic -R 1.0E-8 -M -1 -num-decimal-places 4",
                    "default" : "weka.classifiers.functions.Logistic -R 1.0E-8 -M -1 -num-decimal-places 4"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Multilayer Perceptron" : "https://en.wikipedia.org/wiki/Sequential_minimal_optimization"
        },
        "x-orn-@id" : "/algorithm/SMO"
      }
    },
    "/algorithm/SMOreg" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA SMOreg classifier.",
        "description" : "REST interface to the WEKA SMOreg classifier. Returns a Task URI.",
        "operationId" : "algorithmSMOregPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "c" : {
                    "type" : "number",
                    "description" : "The complexity parameter C.",
                    "format" : "double",
                    "example" : 1.0,
                    "default" : 1.0
                  },
                  "filterType" : {
                    "type" : "integer",
                    "description" : "Determines how/if the data will be transformed. (0=normalize training data, 1=standardize training data, 2=no mormalization/standardization",
                    "format" : "int32",
                    "example" : 0,
                    "enum" : [ 0, 1, 2 ],
                    "default" : 0
                  },
                  "kernel" : {
                    "type" : "string",
                    "description" : "The kernel to use.",
                    "example" : "weka.classifiers.functions.supportVector.PolyKernel -E 1.0 -C 250007",
                    "default" : "weka.classifiers.functions.supportVector.PolyKernel -E 1.0 -C 250007"
                  },
                  "regOptimizer" : {
                    "type" : "string",
                    "description" : "The calibration method to use. ",
                    "example" : "weka.classifiers.functions.supportVector.RegSMOImproved -T 0.001 -V -P 1.0E-12 -L 0.001 -W 1",
                    "default" : "weka.classifiers.functions.Logistic -R 1.0E-8 -M -1 -num-decimal-places 4"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Multilayer Perceptron" : "https://en.wikipedia.org/wiki/Sequential_minimal_optimization"
        },
        "x-orn-@id" : "/algorithm/SMOreg"
      }
    },
    "/algorithm/generic" : {
      "get" : {
        "tags" : [ "algorithm" ],
        "summary" : "Generic REST interface to WEKA classifiers.",
        "description" : "Generic REST interface to WEKA classifiers. Select a classifier and list options for the classifier. Returns a Task URI.",
        "operationId" : "algorithmGenericGet",
        "parameters" : [ {
          "name" : "classifierName",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Classifier to use.",
            "enum" : [ "BayesNet", "DecisionStump", "GaussianProcesses", "J48", "IBk", "LibSVM", "LinearRegression", "Logistic", "M5P", "M5Rules", "MultilayerPerceptron", "NaiveBayes", "RandomForest", "SMO", "SMOreg", "ZeroR", "AdaBoost", "Bagging" ]
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-orn-@id" : "/algorithm/generic"
      },
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "Generic REST interface to WEKA classifiers.",
        "description" : "Generic REST interface to WEKA classifiers. Select a classifier and add parameter string as shown in WEKA Explorer. Returns a Task URI.",
        "operationId" : "algorithmGenericPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "classifierString" : {
                    "type" : "string",
                    "description" : "Classifier to use.",
                    "enum" : [ "BayesNet", "DecisionStump", "GaussianProcesses", "J48", "IBk", "LibSVM", "LinearRegression", "Logistic", "M5P", "M5Rules", "MultilayerPerceptron", "NaiveBayes", "RandomForest", "SMO", "SMOreg", "ZeroR", "AdaBoost", "Bagging" ]
                  },
                  "paramString" : {
                    "type" : "string",
                    "description" : "Parameter String. As shown as in WEKA Explorer classifierer line. example for SMO: -C 1.0 -L 0.001 -P 1.0E-12 -N 0 -V -1 -W 1 -K \"weka.classifiers.functions.supportVector.PolyKernel -E 1.0 -C 250007\" -calibrator \"weka.classifiers.functions.Logistic -R 1.0E-8 -M -1 -num-decimal-places 4\""
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-orn-@id" : "/algorithm/generic"
      }
    },
    "/algorithm/IBk" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA K-nearest neighbours classifier.",
        "description" : "REST interface to the WEKA K-nearest neighbours classifier. Returns a Task URI.",
        "operationId" : "algorithmIBkPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "windowSize" : {
                    "type" : "integer",
                    "description" : "Gets the maximum number of instances allowed in the training pool. The addition of new instances above this value will result in old instances being removed. A value of 0 signifies no limit to the number of training instances. Must be 0 or 1 (Default: 0).",
                    "format" : "int64",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "KNN" : {
                    "type" : "integer",
                    "description" : "The number of neighbors to use. Must be an integer greater than 0 (Default: 1).",
                    "format" : "int64",
                    "default" : 1
                  },
                  "crossValidate" : {
                    "type" : "integer",
                    "description" : "Whether hold-one-out cross-validation will be used to select the best k value. Must be 0 or 1 (Default: 0).",
                    "format" : "int64",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "distanceWeighting" : {
                    "type" : "integer",
                    "description" : "May be 0 for no distance weighting, I for 1/distance or F for 1-distance. Must be 0, I or F (Default: 0).",
                    "format" : "int64",
                    "enum" : [ 0 ],
                    "default" : 0
                  },
                  "meanSquared" : {
                    "type" : "integer",
                    "description" : "Whether the mean squared error is used rather than mean absolute error when doing cross-validation for regression problems. Must be 0 or 1 (Default: 0).",
                    "format" : "int64",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "nearestNeighbourSearchAlgorithm" : {
                    "type" : "string",
                    "description" : "The nearest neighbour search algorithm to use (Default: weka.core.neighboursearch.LinearNNSearch). Fixed.",
                    "enum" : [ "LinearNNSearch" ],
                    "default" : "LinearNNSearch"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "k-nearest neighbors algorithm" : "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm"
        },
        "x-orn-@id" : "/algorithm/IBk"
      }
    },
    "/algorithm/MLPAutoencoder" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA Multilayer Perceptron Autoencoder.",
        "description" : "REST interface to the WEKA Multilayer Perceptron Autoencoder. Returns a Task URI.",
        "operationId" : "algorithmMLPAutoencoderPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "hiddenUnits" : {
                    "type" : "integer",
                    "description" : "The number of hidden units. (Default: 2).",
                    "format" : "int32",
                    "example" : 2,
                    "default" : 2
                  },
                  "lambda" : {
                    "type" : "number",
                    "description" : "Lambda factor for penalty on weights (Default: 0.01).",
                    "format" : "double",
                    "default" : 0.01
                  },
                  "tolerance" : {
                    "type" : "number",
                    "description" : "Tolerance parameter for delta values (Default: 1.0e-6).",
                    "format" : "double",
                    "default" : 0.0000010
                  },
                  "useConjGradDesc" : {
                    "type" : "boolean",
                    "description" : "Use conjugate gradient descent (recommended for many attributes).",
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "useContractiveAE" : {
                    "type" : "boolean",
                    "description" : "Use contractive autoencoder instead of autoencoder with weight decay.",
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "MLPAutoencoder" : "https://en.wikipedia.org/wiki/Autoencoder"
        },
        "x-orn-@id" : "/algorithm/MLPAutoencoder"
      }
    },
    "/algorithm/ZeroR" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA ZeroR classifier.",
        "description" : "REST interface to the WEKA ZeroR classifier. Returns a Task URI.",
        "operationId" : "algorithmZeroRclassificationPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "ZeroR" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/rules/ZeroR.html"
        },
        "x-orn-@id" : "/algorithm/ZeroR"
      }
    },
    "/algorithm/M5Rules" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA M5Rules classifier.",
        "description" : "REST interface to the WEKA M5Rules classifier. Returns a Task URI.",
        "operationId" : "algorithmM5RclassificationPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "description" : "Whether pruning is performed.",
                    "format" : "int32",
                    "example" : 0,
                    "default" : 0
                  },
                  "useUnsmoothed" : {
                    "type" : "integer",
                    "description" : "Whether to use unsmoothed predictions.",
                    "format" : "int32",
                    "default" : 0
                  },
                  "minNumInstances" : {
                    "type" : "number",
                    "description" : "The minimum number of instances to allow at a leaf node.",
                    "format" : "double",
                    "default" : 4
                  },
                  "buildRegressionTree" : {
                    "type" : "integer",
                    "description" : "Whether to generate a regression tree/rule instead of a model tree/rule.",
                    "format" : "int32",
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "M5Rules" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/rules/M5Rules.html"
        },
        "x-orn-@id" : "/algorithm/M5Rules"
      }
    },
    "/algorithm/J48" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA J48 classifier.",
        "description" : "REST interface to the WEKA J48 classifier. Returns a Task URI.",
        "operationId" : "algorithmJ48Post",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "binarySplits" : {
                    "type" : "integer",
                    "description" : "Whether to use binary splits on nominal attributes when building the trees.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "confidenceFactor" : {
                    "type" : "number",
                    "description" : "The confidence factor used for pruning (smaller values incur more pruning).",
                    "default" : 0.25
                  },
                  "minNumObj" : {
                    "type" : "integer",
                    "description" : "The minimum number of instances per leaf.",
                    "format" : "int32",
                    "default" : 2
                  },
                  "numFolds" : {
                    "type" : "integer",
                    "description" : "Determines the amount of data used for reduced-error pruning.  One fold is used for pruning, the rest for growing the tree",
                    "format" : "int32",
                    "default" : 3
                  },
                  "reducedErrorPruning" : {
                    "type" : "integer",
                    "description" : "Whether reduced-error pruning is used instead of C.4.5 pruning.",
                    "format" : "int32",
                    "default" : 0
                  },
                  "seed" : {
                    "type" : "integer",
                    "description" : "The seed used for randomizing the data when reduced-error pruning is used.",
                    "format" : "int32",
                    "default" : 1
                  },
                  "subtreeRaising" : {
                    "type" : "integer",
                    "description" : "Whether to consider the subtree raising operation when pruning.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "description" : "Whether pruning is performed.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "useLaplace" : {
                    "type" : "integer",
                    "description" : "Whether counts at leaves are smoothed based on Laplace.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "J48" : "https://en.wikipedia.org/wiki/C4.5_algorithm#Implementations"
        },
        "x-orn-@id" : "/algorithm/J48"
      }
    },
    "/algorithm/J48/adaboost" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Adaboost M1 with J48 classifier.",
        "description" : "REST interface to the WEKA Adaboost M1 with J48 classifier. Returns a Task URI.",
        "operationId" : "algorithmJ48AdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The number of iterations to be performed.",
                    "format" : "int32",
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Whether resampling is used instead of reweighting.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Weight threshold for weight pruning.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "binarySplits" : {
                    "type" : "integer",
                    "description" : "Whether to use binary splits on nominal attributes when building the trees.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "confidenceFactor" : {
                    "type" : "number",
                    "description" : "The confidence factor used for pruning (smaller values incur more pruning).",
                    "default" : 0.25
                  },
                  "minNumObj" : {
                    "type" : "integer",
                    "description" : "The minimum number of instances per leaf.",
                    "format" : "int32",
                    "default" : 2
                  },
                  "numFolds" : {
                    "type" : "integer",
                    "description" : "Determines the amount of data used for reduced-error pruning.  One fold is used for pruning, the rest for growing the tree",
                    "format" : "int32",
                    "default" : 3
                  },
                  "reducedErrorPruning" : {
                    "type" : "integer",
                    "description" : "Whether reduced-error pruning is used instead of C.4.5 pruning.",
                    "format" : "int32",
                    "default" : 0
                  },
                  "seed" : {
                    "type" : "integer",
                    "description" : "The seed used for randomizing the data when reduced-error pruning is used.",
                    "format" : "int32",
                    "default" : 1
                  },
                  "subtreeRaising" : {
                    "type" : "integer",
                    "description" : "Whether to consider the subtree raising operation when pruning.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "description" : "Whether pruning is performed.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "useLaplace" : {
                    "type" : "integer",
                    "description" : "Whether counts at leaves are smoothed based on Laplace.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Adaboost M1 meta algorithm" : "https://en.wikipedia.org/wiki/AdaBoost"
        },
        "x-orn-@id" : "/algorithm/J48/adaboost"
      }
    },
    "/algorithm/J48/bagging" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Bagging meta classifier.",
        "description" : "REST interface to the WEKA Bagging meta classifier. Returns a Task URI.",
        "operationId" : "algorithmJ48BaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "description" : "Bagging: Size of each bag, as a percentage of the training set size.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Bagging: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Bagging: The number of iterations to be performed.",
                    "format" : "int32",
                    "default" : 10
                  },
                  "binarySplits" : {
                    "type" : "integer",
                    "description" : "Whether to use binary splits on nominal attributes when building the trees.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "confidenceFactor" : {
                    "type" : "number",
                    "description" : "The confidence factor used for pruning (smaller values incur more pruning).",
                    "default" : 0.25
                  },
                  "minNumObj" : {
                    "type" : "integer",
                    "description" : "The minimum number of instances per leaf.",
                    "format" : "int32",
                    "default" : 2
                  },
                  "numFolds" : {
                    "type" : "integer",
                    "description" : "Determines the amount of data used for reduced-error pruning.  One fold is used for pruning, the rest for growing the tree",
                    "format" : "int32",
                    "default" : 3
                  },
                  "reducedErrorPruning" : {
                    "type" : "integer",
                    "description" : "Whether reduced-error pruning is used instead of C.4.5 pruning.",
                    "format" : "int32",
                    "default" : 0
                  },
                  "seed" : {
                    "type" : "integer",
                    "description" : "The seed used for randomizing the data when reduced-error pruning is used.",
                    "format" : "int32",
                    "default" : 1
                  },
                  "subtreeRaising" : {
                    "type" : "integer",
                    "description" : "Whether to consider the subtree raising operation when pruning.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "description" : "Whether pruning is performed.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "useLaplace" : {
                    "type" : "integer",
                    "description" : "Whether counts at leaves are smoothed based on Laplace.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Bagging meta algorithm" : "https://en.wikipedia.org/wiki/Bootstrap_aggregating"
        },
        "x-orn-@id" : "/algorithm/J48/bagging"
      }
    },
    "/algorithm/M5P" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to WEKA M5P classifier.",
        "description" : "REST interface to WEKA M5P classifier. Returns a Task URI.",
        "operationId" : "algorithmM5PPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "description" : "Whether unpruned tree to be generated.",
                    "format" : "int32",
                    "example" : 0,
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useUnsmoothed" : {
                    "type" : "integer",
                    "description" : "Whether to use unsmoothed predictions.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "minNumInstances" : {
                    "type" : "number",
                    "description" : "The minimum number of instances to allow at a leaf node.",
                    "format" : "double",
                    "default" : 4
                  },
                  "buildRegressionTree" : {
                    "type" : "integer",
                    "description" : "Whether to generate a regression tree/rule instead of a model tree/rule.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "M5P" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/trees/M5P.html"
        },
        "x-orn-@id" : "/algorithm/M5P"
      }
    },
    "/algorithm/M5P/adaboost" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to WEKA AdaBoost M1 with M5P classifier.",
        "description" : "REST interface to WEKA AdaBoost M1 with M5P classifier. Returns a Task URI.",
        "operationId" : "algorithmM5PAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The number of iterations to be performed.",
                    "format" : "int32",
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Whether resampling is used instead of reweighting.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Weight threshold for weight pruning.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "description" : "Whether unpruned tree to be generated.",
                    "format" : "int32",
                    "example" : 0,
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useUnsmoothed" : {
                    "type" : "integer",
                    "description" : "Whether to use unsmoothed predictions.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "minNumInstances" : {
                    "type" : "number",
                    "description" : "The minimum number of instances to allow at a leaf node.",
                    "format" : "double",
                    "default" : 4
                  },
                  "buildRegressionTree" : {
                    "type" : "integer",
                    "description" : "Whether to generate a regression tree/rule instead of a model tree/rule.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "M5P" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/trees/M5P.html"
        },
        "x-orn-@id" : "/algorithm/M5P/adaboost"
      }
    },
    "/algorithm/M5P/bagging" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to WEKA Bagging with M5P classifier.",
        "description" : "REST interface to WEKA Bagging with M5P classifier. Returns a Task URI.",
        "operationId" : "algorithmM5PBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "description" : "Bagging: Size of each bag, as a percentage of the training set size.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Bagging: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Bagging: The number of iterations to be performed.",
                    "format" : "int32",
                    "default" : 10
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "description" : "Whether unpruned tree to be generated.",
                    "format" : "int32",
                    "example" : 0,
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useUnsmoothed" : {
                    "type" : "integer",
                    "description" : "Whether to use unsmoothed predictions.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "minNumInstances" : {
                    "type" : "number",
                    "description" : "The minimum number of instances to allow at a leaf node.",
                    "format" : "double",
                    "default" : 4
                  },
                  "buildRegressionTree" : {
                    "type" : "integer",
                    "description" : "Whether to generate a regression tree/rule instead of a model tree/rule.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "M5P" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/trees/M5P.html"
        },
        "x-orn-@id" : "/algorithm/M5P/bagging"
      }
    },
    "/algorithm/DecisionStump" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA DecisionStump classifier.",
        "description" : "REST interface to the DecisionStump classifier. Returns a Task URI.",
        "operationId" : "algorithmDecisionStumpPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "DecisionStump" : "https://en.wikipedia.org/wiki/Decision_stump"
        },
        "x-orn-@id" : "/algorithm/DecisionStump"
      }
    },
    "/algorithm/DecisionStump/adaboost" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA AdaBoost M1 with DecisionStump classifier.",
        "description" : "REST interface to the WEKA AdaBoost M1 with DecisionStump classifier. Returns a Task URI.",
        "operationId" : "algorithmDecisionStumpAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: The number of iterations to be performed.",
                    "format" : "int32",
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Whether resampling is used instead of reweighting.",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "description" : "Adaboost M1: Weight threshold for weight pruning.",
                    "format" : "int32",
                    "default" : 100
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "DecisionStump" : "https://en.wikipedia.org/wiki/Decision_stump"
        },
        "x-orn-@id" : "/algorithm/DecisionStump/adaboost"
      }
    },
    "/algorithm/DecisionStump/bagging" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Bagging with DecisionStump classifier.",
        "description" : "REST interface to the WEKA Bagging with DecisionStump classifier. Returns a Task URI.",
        "operationId" : "algorithmDecisionStumpBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "description" : "Bagging: Size of each bag, as a percentage of the training set size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "Bagging: The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "Bagging: The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "DecisionStump" : "https://en.wikipedia.org/wiki/Decision_stump"
        },
        "x-orn-@id" : "/algorithm/DecisionStump/bagging"
      }
    },
    "/algorithm/RandomForest" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA RandomForest classifier.",
        "description" : "REST interface to the WEKA RandomForest classifier. Returns a Task URI.",
        "operationId" : "algorithmRandomForestPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "storeOutOfBagPredictions" : {
                    "type" : "boolean",
                    "description" : "Whether to store the out-of-bag predictions.",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "numExecutionSlots" : {
                    "type" : "integer",
                    "description" : "The number of execution slots (threads) to use for constructing the ensemble.",
                    "format" : "int32",
                    "example" : 1,
                    "default" : 1
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "description" : "Size of each bag, as a percentage of the training set size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numDecimalPlaces" : {
                    "type" : "integer",
                    "description" : "The number of decimal places to be used for the output of numbers in the model.",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "description" : "The preferred number of instances to process if batch prediction is being performed. More or fewer instances may be provided, but this gives implementations a chance to specify a preferred batch size.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "printClassifiers" : {
                    "type" : "boolean",
                    "description" : "Print the individual classifiers in the output",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "description" : "The number of iterations to be performed.",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "outputOutOfBagComplexityStatistics" : {
                    "type" : "boolean",
                    "description" : "Whether to output complexity-based statistics when out-of-bag evaluation is performed.",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "breakTiesRandomly" : {
                    "type" : "boolean",
                    "description" : "Break ties randomly when several attributes look equally good.",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "maxDepth" : {
                    "type" : "integer",
                    "description" : "The maximum depth of the tree, 0 for unlimited.",
                    "format" : "int32",
                    "example" : 0,
                    "default" : 0
                  },
                  "computeAttributeImportance" : {
                    "type" : "boolean",
                    "description" : "Compute attribute importance via mean impurity decrease",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "calcOutOfBag" : {
                    "type" : "boolean",
                    "description" : "Whether the out-of-bag error is calculated.",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "numFeatures" : {
                    "type" : "integer",
                    "description" : "Sets the number of randomly chosen attributes. If 0, int(log_2(#predictors) + 1) is used.",
                    "format" : "int32",
                    "example" : 0,
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Random Forest" : "https://en.wikipedia.org/wiki/Random_forest"
        },
        "x-orn-@id" : "/algorithm/RandomForest"
      }
    },
    "/aa/login" : {
      "post" : {
        "tags" : [ "authorization" ],
        "summary" : "Uses OpenAM server to get a security token.",
        "description" : "Request a security token.",
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "username" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/aa/logout" : {
      "post" : {
        "tags" : [ "authorization" ],
        "summary" : "Invalidates a security token and logs out the corresponding user.",
        "description" : "Invalidate a security token.",
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/cluster/EM" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "REST interface to the WEKA EM clusterer.",
        "description" : "REST interface to the WEKA EM (expectation maximisation) clusterer.",
        "operationId" : "clusterEMPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "x-orn-@test" : "testvalue"
                  },
                  "numFolds" : {
                    "type" : "integer",
                    "description" : "Number of folds to use when cross-validating to find the best number of clusters (default = 10)",
                    "format" : "int32",
                    "default" : 10
                  },
                  "numKMeansRuns" : {
                    "type" : "integer",
                    "description" : "Number of runs of k-means to perform (default = 10)",
                    "format" : "int32",
                    "default" : 10
                  },
                  "maximumNumberOfClusters" : {
                    "type" : "integer",
                    "description" : "Maximum number of clusters to consider during cross-validation to select the best number of clusters (default = -1).",
                    "format" : "int32",
                    "default" : -1
                  },
                  "numClusters" : {
                    "type" : "integer",
                    "description" : "The number of clusters. -1 to select number of clusters automatically by cross validation (default = -1).",
                    "format" : "int32",
                    "default" : -1
                  },
                  "maxIterations" : {
                    "type" : "integer",
                    "description" : "Maximum number of iterations (default = 100).",
                    "format" : "int32",
                    "default" : 100
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Cluster"
        },
        "x-algorithm" : {
          "EM" : "https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm"
        },
        "x-orn-@id" : "/cluster/EM"
      }
    },
    "/cluster/SimpleKMeans" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "REST interface to the WEKA SimpleKMeans clusterer.",
        "description" : "REST interface to the WEKA SimpleKMeans clusterer.",
        "operationId" : "clusterSimpleKMeansPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset)."
                  },
                  "canopyMaxNumCanopiesToHoldInMemory" : {
                    "type" : "integer",
                    "description" : "If using canopy clustering for initialization and/or speedup this is the maximum number of candidate canopies to retain in main memory during training of the canopy clusterer. T2 distance and data characteristics determine how many candidate canopies are formed before periodic and final pruning are performed. There may not be enough memory available if T2 is set too low.",
                    "format" : "int32"
                  },
                  "canopyMinimumCanopyDensity" : {
                    "type" : "number",
                    "description" : "If using canopy clustering for initialization and/or speedup this is the minimum T2-based density below which a canopy will be pruned during periodic pruning",
                    "format" : "double"
                  },
                  "canopyPeriodicPruningRate" : {
                    "type" : "number",
                    "description" : "If using canopy clustering for initialization and/or speedup this is how often to prune low density canopies during training",
                    "format" : "double"
                  },
                  "canopyT1" : {
                    "type" : "number",
                    "description" : "The T1 distance to use when using canopy clustering. Values < 0 are taken as a positive multiplier for the T2 distance",
                    "format" : "double"
                  },
                  "canopyT2" : {
                    "type" : "number",
                    "description" : "The T2 distance to use when using canopy clustering. Values < 0 indicate that this should be set using a heuristic based on attribute standard deviation",
                    "format" : "double"
                  },
                  "displayStdDevs" : {
                    "type" : "boolean",
                    "description" : "Display std deviations of numeric attributes and counts of nominal attributes."
                  },
                  "distanceFunction" : {
                    "type" : "string",
                    "description" : "The distance function to use for instances comparison (default: EuclideanDistance) (e.g.: 'EuclideanDistance -R first-last', 'ManhattanDistance -R 1,2,3,4')."
                  },
                  "dontReplaceMissingValues" : {
                    "type" : "boolean",
                    "description" : "Replace missing values globally with mean/mode."
                  },
                  "fastDistanceCalc" : {
                    "type" : "boolean",
                    "description" : "Uses cut-off values for speeding up distance calculation, but suppresses also the calculation and output of the within cluster sum of squared errors/sum of distances."
                  },
                  "initializationMethod" : {
                    "type" : "integer",
                    "description" : "The initialization method to use. Random(0), k-means++(1), Canopy(2) or farthest first(3).",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3 ],
                    "default" : 0
                  },
                  "maxIterations" : {
                    "type" : "integer",
                    "description" : "Set maximum number of iterations.",
                    "format" : "int32"
                  },
                  "numClusters" : {
                    "type" : "integer",
                    "description" : "Set number of clusters.",
                    "format" : "int32"
                  },
                  "numExecutionSlots" : {
                    "type" : "integer",
                    "description" : "The number of execution slots (threads) to use. Set equal to the number of available cpu/cores.",
                    "format" : "int32"
                  },
                  "preserveInstancesOrder" : {
                    "type" : "boolean",
                    "description" : "Preserve order of instances."
                  },
                  "reduceNumberOfDistanceCalcsViaCanopies" : {
                    "type" : "boolean",
                    "description" : "Use canopy clustering to reduce the number of distance calculations performed by k-means"
                  },
                  "seed" : {
                    "type" : "integer",
                    "description" : "The random number seed to be used.",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Cluster"
        },
        "x-algorithm" : {
          "SimpleKMeans" : "http://weka.sourceforge.net/doc.dev/weka/clusterers/SimpleKMeans.html"
        },
        "x-orn-@id" : "/cluster/EM"
      }
    },
    "/cluster/Hierarchical" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "REST interface to the WEKA Hierarchical clusterer.",
        "description" : "REST interface to the WEKA Hierarchical clusterer.",
        "operationId" : "clusterHierarchicalPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset)."
                  },
                  "printNewick" : {
                    "type" : "boolean",
                    "description" : "Flag to indicate whether the cluster should be print in Newick format. This can be useful for display in other programs. However, for large datasets a lot of text may be produced, which may not be a nuisance when the Newick format is not required"
                  },
                  "numClusters" : {
                    "type" : "integer",
                    "description" : "Sets the number of clusters. If a single hierarchy is desired, set this to 1.",
                    "format" : "int32",
                    "default" : 1
                  },
                  "linkType" : {
                    "type" : "string",
                    "description" : "Sets the method used to measure the distance between two clusters.",
                    "enum" : [ "SINGLE", "COMPLETE", "ADJCOMPLETE", "AVERAGE", "MEAN", "CENTROID", "WARD", "NEIGHBOR_JOINING" ],
                    "default" : "SINGLE"
                  },
                  "distanceIsBranchLength" : {
                    "type" : "boolean",
                    "description" : "If set to false, the distance between clusters is interpreted as the height of the node linking the clusters. This is appropriate for example for single link clustering. However, for neighbor joining, the distance is better interpreted as branch length. Set this flag to get the latter interpretation."
                  },
                  "distanceFunction" : {
                    "type" : "string",
                    "description" : "Sets the distance function, which measures the distance between two individual. Instances (or possibly the distance between an instance and the centroid of a clusterdepending on the Link type). Examples: 'EuclideanDistance -R first-last', 'weka.core.ChebyshevDistance -R first-last', 'weka.core.ManhattanDistance -R first-last', 'weka.core.MinkowskiDistance -P 2.0 -R first-last' or 'weka.core.FilteredDistance -R first-last -F \"weka.filters.unsupervised.attribute.RandomProjection -N 10 -R 42 -D Sparse1\" -D \"weka.core.EuclideanDistance -R first-last\"'."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Cluster"
        },
        "x-algorithm" : {
          "SimpleKMeans" : "http://weka.sourceforge.net/doc.dev/weka/clusterers/HierarchicalClusterer.html"
        },
        "x-orn-@id" : "/cluster/Hierarchical"
      }
    },
    "/dataset/{id}" : {
      "get" : {
        "tags" : [ "dataset" ],
        "summary" : "Get arff representation of a dataset.",
        "description" : "Get arff representation of a dataset.",
        "operationId" : "getDatasetArff",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Dataset ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Dataset",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:ID"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Arff"
        },
        "x-orn-@id" : "/dataset/{id}"
      },
      "post" : {
        "tags" : [ "dataset" ],
        "summary" : "Filter an internal dataset with weka filter.",
        "description" : "Filter an internal dataset with weka filter. Remove attributes and normalize or standardize all numeric attributes of a dataset. Change String to Nominal. Or Discretize attributes. Save the dataset by sending the Accept header text/uri-list as content-type. Use text/x-arff to preview the data.",
        "operationId" : "filter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Dataset ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "idx_remove" : {
                    "type" : "string",
                    "default" : "0"
                  },
                  "scale" : {
                    "type" : "string"
                  },
                  "translation" : {
                    "type" : "string"
                  },
                  "standardize" : {
                    "type" : "boolean"
                  },
                  "ignore" : {
                    "type" : "boolean"
                  },
                  "attributeRange" : {
                    "type" : "string"
                  },
                  "attributeIndicies" : {
                    "type" : "string"
                  },
                  "bins" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "useEqualFrequency" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Dataset",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:ID"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn-@id" : "/dataset/{id}"
      }
    },
    "/dataset" : {
      "get" : {
        "tags" : [ "dataset" ],
        "summary" : "List all converted datasets.",
        "description" : "List all converted datasets.",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:URIList",
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:URIList"
        },
        "x-orn-@id" : "/dataset"
      },
      "post" : {
        "tags" : [ "dataset" ],
        "summary" : "Download dataset and convert into weka arff format.",
        "description" : "Download an external dataset and convert it into weka arff format. Save the dataset by sending the Accept header text/uri-list as content-type. Use text/x-arff to preview the data.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bearerToken",
          "in" : "header",
          "description" : "Token for Bearer Authentication",
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer eyJhbGciO..."
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "dataset_uri" : {
                    "type" : "string",
                    "description" : "URI of the dataset to be used.",
                    "example" : "https://api-jaqpot.prod.openrisknet.org/jaqpot/services/dataset/Gajewicz_10_29_class"
                  },
                  "class_uri" : {
                    "type" : "string",
                    "description" : "URI of the feature to define as weka class"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Dataset",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:URI"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn-@id" : "/dataset"
      }
    },
    "/model/{id}" : {
      "get" : {
        "tags" : [ "model" ],
        "summary" : "Get representation of a model.",
        "description" : "Get representation of a model.",
        "operationId" : "getModel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "model ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Model",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:ModelId"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Model"
        },
        "x-orn-@id" : "/model/{id}"
      },
      "post" : {
        "tags" : [ "model" ],
        "summary" : "Predict testdata with a model.",
        "description" : "Predict testdata with a model.",
        "operationId" : "modelPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "model ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "ARFF data file.",
                    "format" : "binary"
                  },
                  "datasetID" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Model",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Prediction"
        },
        "x-orn-@id" : "/model/{id}"
      }
    },
    "/model" : {
      "get" : {
        "tags" : [ "model" ],
        "summary" : "List all Models",
        "description" : "List all Models.",
        "operationId" : "getModelList",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Model",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:void"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:ModelList"
        },
        "x-orn-@id" : "/model"
      }
    },
    "/task/{id}" : {
      "get" : {
        "tags" : [ "task" ],
        "summary" : "Get json representation of a task.",
        "description" : "Get json representation of a task.",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Task",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:ID"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-orn-@id" : "/task/{id}"
      }
    },
    "/task" : {
      "get" : {
        "tags" : [ "task" ],
        "summary" : "List all tasks.",
        "description" : "List all tasks.",
        "operationId" : "list_1",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:URIList",
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:URIList"
        },
        "x-orn-@id" : "/task"
      }
    }
  },
  "x-orn-@type" : "Service",
  "x-orn-@context" : {
    "x-orn-@type" : "@type",
    "@vocab" : "http://openrisknet.org/schema#",
    "x-orn" : "http://openrisknet.org/schema#",
    "x-orn-@id" : "@id"
  },
  "x-orn-@id" : "https://jguweka.prod.openrisknet.org"
}
