{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "JGU WEKA REST Service",
    "description" : "RESTful API Webservice to WEKA Machine Learning Algorithms.\n  This webservice provides an [OpenRiskNet](https://openrisknet.org/) compliant REST interface to machine learning algorithms from the WEKA Java Library.\n  This application is developed by the [Institute of Computer Science](http://www.datamining.informatik.uni-mainz.de) at the Johannes Gutenberg University Mainz.\n\n  OpenRiskNet is funded by the European Commission GA 731075. WEKA is developed by the [Machine Learning Group](https://www.cs.waikato.ac.nz/ml/index.html) at the University of Waikato.\n\n  See [Documentation](https://jguwekarest.github.io/jguwekarest/), [Issue Tracker](https://github.com/jguwekarest/jguwekarest/issues) and [Code](https://github.com/jguwekarest/jguwekarest) at Github.",
    "contact" : {
      "name" : "Data Mining Group JGU Mainz",
      "url" : "http://www.datamining.informatik.uni-mainz.de",
      "email" : "rautenberg@uni-mainz.de"
    },
    "license" : {
      "name" : "GNU General Public License 3",
      "url" : "https://www.gnu.org/licenses/gpl-3.0.de.html"
    },
    "version" : "0.3.0-OAS3"
  },
  "externalDocs" : {
    "description" : "JGU WEKA REST Service Documentation on GitHub",
    "url" : "https://jguwekarest.github.io/jguwekarest/"
  },
  "paths" : {
    "/algorithm" : {
      "get" : {
        "tags" : [ "algorithm" ],
        "summary" : "Get a list of algorithms.",
        "description" : "Get a list of all available algorithms.",
        "operationId" : "algorithmGet",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:AlgorithmList"
        },
        "x-orn-@id" : "/algorithm/generic"
      }
    },
    "/api/api.json" : {
      "get" : {
        "tags" : [ "api" ],
        "summary" : "Get Open API representation in JSON",
        "description" : "Get Open API representation in JSON",
        "operationId" : "apiApiJsonGet",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/algorithm/BayesNet" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA BayesNet classifier.",
        "description" : "REST interface to the WEKA BayesNet classifier. Returns a Task URI.",
        "operationId" : "algorithmBayesNetPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "estimator" : {
                    "type" : "string",
                    "description" : "The estimator algorithm to be used in the compound. Must be SimpleEstimator,  MultiNomialBMAEstimator, BMAEstimator or BayesNetEstimator (Default: SimpleEstimator).",
                    "example" : "SimpleEstimator",
                    "enum" : [ "SimpleEstimator", "MultiNomialBMAEstimator", "BMAEstimator", "BayesNetEstimator" ],
                    "default" : "SimpleEstimator"
                  },
                  "estimatorParams" : {
                    "type" : "number",
                    "description" : "The parameter for the estimator to be used in the compound.  Must be of type double (Default: 0.5).",
                    "example" : 0.5,
                    "default" : 0.5
                  },
                  "useADTree" : {
                    "type" : "integer",
                    "description" : "Whether to use ADTrees for searching (using will increase the speed of the search, but will also raise the memory use (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "searchAlgorithm" : {
                    "type" : "string",
                    "description" : "The algorithmn to be used for searching in the compound. Must be local.K2, local.GeneticSearch, local.HillClimber, local.LAGDHillClimber, local.RepeatedHillClimber, local.SimulatedAnnealing, local.TabuSearch, local.TAN, global.K2, global.GeneticSearch, global.HillClimber, global.RepeatedHillClimber, global.SimulatedAnnealing, global.TabuSearch, global.TAN, ci.CISearchAlgorithm, ci.ICSSearchAlgorithm (Default: local.K2).",
                    "enum" : [ "local.K2", "local.GeneticSearch", "local.HillClimber", "local.LAGDHillClimber", "local.RepeatedHillClimber", "local.SimulatedAnnealing", "local.TabuSearch", "local.TAN", "global.K2", "global.GeneticSearch", "global.HillClimber", "global.RepeatedHillClimber", "global.SimulatedAnnealing", "global.TabuSearch", "global.TAN", "ci.CISearchAlgorithm", "ci.ICSSearchAlgorithm" ],
                    "default" : "local.K2"
                  },
                  "searchParams" : {
                    "type" : "string",
                    "example" : "-P 1 -S BAYES",
                    "default" : "-P 1 -S BAYES"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet"
      }
    },
    "/algorithm/BayesNet/adaboost" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA AdaBoost M1 with BayesNet classifier.",
        "description" : "REST interface to the WEKA AdaBoost M1 with BayesNet classifier. Returns a Task URI.",
        "operationId" : "algorithmBayesNetAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "estimator" : {
                    "type" : "string",
                    "description" : "The estimator algorithm to be used in the compound. Must be SimpleEstimator,  MultiNomialBMAEstimator, BMAEstimator or BayesNetEstimator (Default: SimpleEstimator).",
                    "example" : "SimpleEstimator",
                    "enum" : [ "SimpleEstimator", "MultiNomialBMAEstimator", "BMAEstimator", "BayesNetEstimator" ],
                    "default" : "SimpleEstimator"
                  },
                  "estimatorParams" : {
                    "type" : "number",
                    "description" : "The parameter for the estimator to be used in the compound.  Must be of type double (Default: 0.5).",
                    "example" : 0.5,
                    "default" : 0.5
                  },
                  "useADTree" : {
                    "type" : "integer",
                    "description" : "Whether to use ADTrees for searching (using will increase the speed of the search, but will also raise the memory use (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "searchAlgorithm" : {
                    "type" : "string",
                    "description" : "The algorithmn to be used for searching in the compound. Must be local.K2, local.GeneticSearch, local.HillClimber, local.LAGDHillClimber, local.RepeatedHillClimber, local.SimulatedAnnealing, local.TabuSearch, local.TAN, global.K2, global.GeneticSearch, global.HillClimber, global.RepeatedHillClimber, global.SimulatedAnnealing, global.TabuSearch, global.TAN, ci.CISearchAlgorithm, ci.ICSSearchAlgorithm (Default: local.K2).",
                    "enum" : [ "local.K2", "local.GeneticSearch", "local.HillClimber", "local.LAGDHillClimber", "local.RepeatedHillClimber", "local.SimulatedAnnealing", "local.TabuSearch", "local.TAN", "global.K2", "global.GeneticSearch", "global.HillClimber", "global.RepeatedHillClimber", "global.SimulatedAnnealing", "global.TabuSearch", "global.TAN", "ci.CISearchAlgorithm", "ci.ICSSearchAlgorithm" ],
                    "default" : "local.K2"
                  },
                  "searchParams" : {
                    "type" : "string",
                    "example" : "-P 1 -S BAYES",
                    "default" : "-P 1 -S BAYES"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet/adaboost"
      }
    },
    "/algorithm/BayesNet/bagging" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Bagging with BayesNet classifier.",
        "description" : "REST interface to the WEKA Bagging with BayesNet BayesNet classifier. Returns a Task URI.",
        "operationId" : "algorithmBayesNetBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string",
                    "description" : "Dataset URI or local dataset ID (to the arff representation of a dataset).",
                    "default" : ""
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "estimator" : {
                    "type" : "string",
                    "description" : "The estimator algorithm to be used in the compound. Must be SimpleEstimator,  MultiNomialBMAEstimator, BMAEstimator or BayesNetEstimator (Default: SimpleEstimator).",
                    "example" : "SimpleEstimator",
                    "enum" : [ "SimpleEstimator", "MultiNomialBMAEstimator", "BMAEstimator", "BayesNetEstimator" ],
                    "default" : "SimpleEstimator"
                  },
                  "estimatorParams" : {
                    "type" : "number",
                    "description" : "The parameter for the estimator to be used in the compound.  Must be of type double (Default: 0.5).",
                    "example" : 0.5,
                    "default" : 0.5
                  },
                  "useADTree" : {
                    "type" : "integer",
                    "description" : "Whether to use ADTrees for searching (using will increase the speed of the search, but will also raise the memory use (Default: 0).",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "searchAlgorithm" : {
                    "type" : "string",
                    "description" : "The algorithmn to be used for searching in the compound. Must be local.K2, local.GeneticSearch, local.HillClimber, local.LAGDHillClimber, local.RepeatedHillClimber, local.SimulatedAnnealing, local.TabuSearch, local.TAN, global.K2, global.GeneticSearch, global.HillClimber, global.RepeatedHillClimber, global.SimulatedAnnealing, global.TabuSearch, global.TAN, ci.CISearchAlgorithm, ci.ICSSearchAlgorithm (Default: local.K2).",
                    "enum" : [ "local.K2", "local.GeneticSearch", "local.HillClimber", "local.LAGDHillClimber", "local.RepeatedHillClimber", "local.SimulatedAnnealing", "local.TabuSearch", "local.TAN", "global.K2", "global.GeneticSearch", "global.HillClimber", "global.RepeatedHillClimber", "global.SimulatedAnnealing", "global.TabuSearch", "global.TAN", "ci.CISearchAlgorithm", "ci.ICSSearchAlgorithm" ],
                    "default" : "local.K2"
                  },
                  "searchParams" : {
                    "type" : "string",
                    "example" : "-P 1 -S BAYES",
                    "default" : "-P 1 -S BAYES"
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "example" : "CrossValidation",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet/adaboost"
      }
    },
    "/algorithm/NaiveBayes" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA BayesNet classifier.",
        "description" : "REST interface to the WEKA BayesNet classifier. Returns a Task URI.",
        "operationId" : "algorithmNaiveBayesPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "useKernelEstimator" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useSupervisedDiscretization" : {
                    "type" : "number",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet"
      }
    },
    "/algorithm/NaiveBayes/adaboost" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA  AdaBoost M1 with NaiveBayes classifier.",
        "description" : "REST interface to the WEKA  AdaBoost M1 with NaiveBayes classifier. Returns a Task URI.",
        "operationId" : "algorithmNaiveBayesAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "useKernelEstimator" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useSupervisedDiscretization" : {
                    "type" : "number",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet"
      }
    },
    "/algorithm/NaiveBayes/bagging" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA Bagging with NaiveBayes classifier.",
        "description" : "REST interface to the WEKA Bagging with NaiveBayes classifier. Returns a Task URI.",
        "operationId" : "algorithmNaiveBayesBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "useKernelEstimator" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useSupervisedDiscretization" : {
                    "type" : "number",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "description" : "Validation to use.",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "minimum" : 0,
                    "type" : "number",
                    "description" : "Num of Crossvalidations or Percentage Split %.",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "http://purl.obolibrary.org/obo/IAO_0000064" : "http://purl.enanomapper.org/onto/ENM_8000001",
          "http://purl.enanomapper.org/onto/ENM_8000002" : "http://purl.enanomapper.org/onto/ENM_8000005",
          "http://purl.enanomapper.org/onto/ENM_8000014" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000001" : "http://purl.enanomapper.org/onto/ENM_8000002",
          "BayesNet" : "https://en.wikipedia.org/wiki/Bayesian_network",
          "http://purl.enanomapper.org/onto/ENM_8000005" : "http://purl.enanomapper.org/onto/ENM_8000014"
        },
        "x-orn-@id" : "/algorithm/BayesNet"
      }
    },
    "/algorithm/libsvm" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA support vector machine wrapper library classifier.",
        "description" : "REST interface to the WEKA support vector machine wrapper library classifier.Returns a Task URI.",
        "operationId" : "algorithmLibSVMPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "svmType" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3, 4 ],
                    "default" : 0
                  },
                  "coef0" : {
                    "type" : "number",
                    "format" : "float",
                    "default" : 0
                  },
                  "cost" : {
                    "type" : "number",
                    "format" : "float",
                    "default" : 1.0
                  },
                  "degree" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 3
                  },
                  "eps" : {
                    "type" : "number",
                    "default" : 0.001
                  },
                  "gamma" : {
                    "type" : "number",
                    "default" : 0.0
                  },
                  "kernelType" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3 ],
                    "default" : 2
                  },
                  "loss" : {
                    "type" : "number",
                    "default" : 0.1
                  },
                  "normalize" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "nu" : {
                    "type" : "number",
                    "default" : 0.5
                  },
                  "probabilityEstimates" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "shrinking" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "weights" : {
                    "type" : "string"
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "support vector machine" : "https://en.wikipedia.org/wiki/Support_vector_machine"
        },
        "x-orn-@id" : "/algorithm/libsvm"
      }
    },
    "/algorithm/logistic" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA logistic classifier.",
        "description" : "REST interface to the WEKA logistic classifier. Logistic class for building and using a multinomial logistic regression model with a ridge estimator. Returns a Task URI.",
        "operationId" : "algorithmLogisticPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "ridge" : {
                    "type" : "number"
                  },
                  "useConjugateGradientDescent" : {
                    "type" : "boolean"
                  },
                  "maxIts" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "support vector machine" : "https://en.wikipedia.org/wiki/Multinomial_logistic_regression"
        },
        "x-orn-@id" : "/algorithm/logistic"
      }
    },
    "/algorithm/MultilayerPerceptron" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA logistic classifier.",
        "description" : "REST interface to the WEKA logistic classifier. Logistic class for building and using a multinomial logistic regression model with a ridge estimator. Returns a Task URI.",
        "operationId" : "algorithmMultilayerPerceptronPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "momentum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 0.2,
                    "default" : 0.2
                  },
                  "nominalToBinaryFilter" : {
                    "type" : "boolean",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "hiddenLayers" : {
                    "type" : "string",
                    "example" : "a",
                    "default" : "a"
                  },
                  "validationThreshold" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 20,
                    "default" : 20
                  },
                  "normalizeAttributes" : {
                    "type" : "boolean",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "numDecimalPlaces" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "decay" : {
                    "type" : "boolean",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "validationSetSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 0,
                    "default" : 0
                  },
                  "trainingTime" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 500,
                    "default" : 500
                  },
                  "normalizeNumericClass" : {
                    "type" : "boolean",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "learningRate" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 0.3,
                    "default" : 0.3
                  },
                  "reset" : {
                    "type" : "boolean",
                    "example" : true,
                    "enum" : [ true, false ],
                    "default" : true
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Multilayer Perceptron" : "https://en.wikipedia.org/wiki/Multilayer_perceptron"
        },
        "x-orn-@id" : "/algorithm/MultilayerPerceptron"
      }
    },
    "/algorithm/SMO" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA SMO classifier.",
        "description" : "REST interface to the WEKA SMO classifier. Returns a Task URI.",
        "operationId" : "algorithmSMOPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "numFolds" : {
                    "minimum" : -1,
                    "type" : "integer",
                    "format" : "int32",
                    "example" : -1,
                    "default" : -1
                  },
                  "c" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 1.0,
                    "default" : 1.0
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "kernel" : {
                    "type" : "string",
                    "description" : "The kernel to use.",
                    "example" : "weka.classifiers.functions.supportVector.PolyKernel -E 1.0 -C 250007",
                    "default" : "weka.classifiers.functions.supportVector.PolyKernel -E 1.0 -C 250007"
                  },
                  "filterType" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 0,
                    "enum" : [ 0, 1, 2 ],
                    "default" : 0
                  },
                  "calibrator" : {
                    "type" : "string",
                    "description" : "The calibration method to use.",
                    "example" : "weka.classifiers.functions.Logistic -R 1.0E-8 -M -1 -num-decimal-places 4",
                    "default" : "weka.classifiers.functions.Logistic -R 1.0E-8 -M -1 -num-decimal-places 4"
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Multilayer Perceptron" : "https://en.wikipedia.org/wiki/Sequential_minimal_optimization"
        },
        "x-orn-@id" : "/algorithm/SMO"
      }
    },
    "/algorithm/SMOreg" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA SMOreg classifier.",
        "description" : "REST interface to the WEKA SMOreg classifier. Returns a Task URI.",
        "operationId" : "algorithmSMOregPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "c" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 1.0,
                    "default" : 1.0
                  },
                  "filterType" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 0,
                    "enum" : [ 0, 1, 2 ],
                    "default" : 0
                  },
                  "kernel" : {
                    "type" : "string",
                    "description" : "The kernel to use.",
                    "example" : "weka.classifiers.functions.supportVector.PolyKernel -E 1.0 -C 250007",
                    "default" : "weka.classifiers.functions.supportVector.PolyKernel -E 1.0 -C 250007"
                  },
                  "regOptimizer" : {
                    "type" : "string",
                    "description" : "The learning algorithm.",
                    "example" : "weka.classifiers.functions.supportVector.RegSMOImproved -T 0.001 -V -P 1.0E-12 -L 0.001 -W 1",
                    "default" : "weka.classifiers.functions.Logistic -R 1.0E-8 -M -1 -num-decimal-places 4"
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Multilayer Perceptron" : "https://en.wikipedia.org/wiki/Sequential_minimal_optimization"
        },
        "x-orn-@id" : "/algorithm/SMOreg"
      }
    },
    "/algorithm/linearRegression" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA linear regression classifier.",
        "description" : "REST interface to the WEKA linear regression classifier. Returns a Task URI.",
        "operationId" : "algorithmLRPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "attributeSelectionMethod" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2 ],
                    "default" : 0
                  },
                  "eliminateColinearAttributes" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "ridge" : {
                    "type" : "number",
                    "default" : 1.0E-8
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Linear Regression" : "https://en.wikipedia.org/wiki/Linear_regression"
        },
        "x-orn-@id" : "/algorithm/linearRegression"
      }
    },
    "/algorithm/generic" : {
      "get" : {
        "tags" : [ "algorithm" ],
        "summary" : "Generic REST interface to WEKA classifiers.",
        "description" : "Generic REST interface to WEKA classifiers. Select a classifier and list options for the classifier. Returns a Task URI.",
        "operationId" : "algorithmGenericGet",
        "parameters" : [ {
          "name" : "classifierName",
          "in" : "query",
          "description" : "Classifier to use.",
          "schema" : {
            "type" : "string",
            "enum" : [ "BayesNet", "DecisionStump", "GaussianProcesses", "J48", "IBk", "LibSVM", "LinearRegression", "Logistic", "M5P", "M5Rules", "MultilayerPerceptron", "NaiveBayes", "RandomForest", "SMO", "SMOreg", "ZeroR", "AdaBoost", "Bagging" ]
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-orn-@id" : "/algorithm/generic"
      },
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "Generic REST interface to WEKA classifiers.",
        "description" : "Generic REST interface to WEKA classifiers. Select a classifier and add parameter string as shown in WEKA Explorer. Returns a Task URI.",
        "operationId" : "algorithmGenericPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "classifierString" : {
                    "type" : "string",
                    "enum" : [ "BayesNet", "DecisionStump", "GaussianProcesses", "J48", "IBk", "LibSVM", "LinearRegression", "Logistic", "M5P", "M5Rules", "MultilayerPerceptron", "NaiveBayes", "RandomForest", "SMO", "SMOreg", "ZeroR", "AdaBoost", "Bagging" ]
                  },
                  "paramString" : {
                    "type" : "string"
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-orn-@id" : "/algorithm/generic"
      }
    },
    "/algorithm/IBk" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA K-nearest neighbours classifier.",
        "description" : "REST interface to the WEKA K-nearest neighbours classifier. Returns a Task URI.",
        "operationId" : "algorithmIBkPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "windowSize" : {
                    "type" : "integer",
                    "format" : "int64",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "KNN" : {
                    "type" : "integer",
                    "description" : "The number of neighbors to use. Must be an integer greater than 0 (Default: 1).",
                    "format" : "int64",
                    "default" : 1
                  },
                  "crossValidate" : {
                    "type" : "integer",
                    "format" : "int64",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "distanceWeighting" : {
                    "type" : "integer",
                    "format" : "int64",
                    "enum" : [ 0 ],
                    "default" : 0
                  },
                  "meanSquared" : {
                    "type" : "integer",
                    "format" : "int64",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "nearestNeighbourSearchAlgorithm" : {
                    "type" : "string",
                    "enum" : [ "LinearNNSearch" ],
                    "default" : "LinearNNSearch"
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "k-nearest neighbors algorithm" : "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm"
        },
        "x-orn-@id" : "/algorithm/IBk"
      }
    },
    "/algorithm/ZeroR" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA ZeroR classifier.",
        "description" : "REST interface to the WEKA ZeroR classifier. Returns a Task URI.",
        "operationId" : "algorithmZeroRclassificationPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "ZeroR" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/rules/ZeroR.html"
        },
        "x-orn-@id" : "/algorithm/ZeroR"
      }
    },
    "/algorithm/M5Rules" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA M5Rules classifier.",
        "description" : "REST interface to the WEKA M5Rules classifier. Returns a Task URI.",
        "operationId" : "algorithmM5RclassificationPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 0
                  },
                  "useUnsmoothed" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 0
                  },
                  "minNumInstances" : {
                    "type" : "number",
                    "format" : "double",
                    "default" : 4
                  },
                  "buildRegressionTree" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "M5Rules" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/rules/M5Rules.html"
        },
        "x-orn-@id" : "/algorithm/M5Rules"
      }
    },
    "/algorithm/DecisionStump/bagging" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Bagging with DecisionStump classifier.",
        "description" : "REST interface to the WEKA Bagging with DecisionStump classifier. Returns a Task URI.",
        "operationId" : "algorithmDecisionStumpBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "DecisionStump" : "https://en.wikipedia.org/wiki/Decision_stump"
        },
        "x-orn-@id" : "/algorithm/DecisionStump/bagging"
      }
    },
    "/algorithm/RandomForest" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA RandomForest classifier.",
        "description" : "REST interface to the WEKA RandomForest classifier. Returns a Task URI.",
        "operationId" : "algorithmRandomForestPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "storeOutOfBagPredictions" : {
                    "type" : "boolean",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "numExecutionSlots" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 1,
                    "default" : 1
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "numDecimalPlaces" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 10,
                    "default" : 10
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "printClassifiers" : {
                    "type" : "boolean",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 100,
                    "default" : 100
                  },
                  "outputOutOfBagComplexityStatistics" : {
                    "type" : "boolean",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "breakTiesRandomly" : {
                    "type" : "boolean",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "maxDepth" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 0,
                    "default" : 0
                  },
                  "computeAttributeImportance" : {
                    "type" : "boolean",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "calcOutOfBag" : {
                    "type" : "boolean",
                    "example" : false,
                    "enum" : [ true, false ],
                    "default" : false
                  },
                  "numFeatures" : {
                    "type" : "integer",
                    "format" : "int32",
                    "example" : 0,
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Random Forest" : "https://en.wikipedia.org/wiki/Random_forest"
        },
        "x-orn-@id" : "/algorithm/RandomForest"
      }
    },
    "/algorithm/J48/adaboost" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Adaboost M1 with J48 classifier.",
        "description" : "REST interface to the WEKA Adaboost M1 with J48 classifier. Returns a Task URI.",
        "operationId" : "algorithmJ48AdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "binarySplits" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "confidenceFactor" : {
                    "type" : "number",
                    "default" : 0.25
                  },
                  "minNumObj" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 2
                  },
                  "numFolds" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 3
                  },
                  "reducedErrorPruning" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 0
                  },
                  "seed" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 1
                  },
                  "subtreeRaising" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "useLaplace" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Adaboost M1 meta algorithm" : "https://en.wikipedia.org/wiki/AdaBoost"
        },
        "x-orn-@id" : "/algorithm/J48/adaboost"
      }
    },
    "/algorithm/J48/bagging" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA Bagging meta classifier.",
        "description" : "REST interface to the WEKA Bagging meta classifier. Returns a Task URI.",
        "operationId" : "algorithmJ48BaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 10
                  },
                  "binarySplits" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "confidenceFactor" : {
                    "type" : "number",
                    "default" : 0.25
                  },
                  "minNumObj" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 2
                  },
                  "numFolds" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 3
                  },
                  "reducedErrorPruning" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 0
                  },
                  "seed" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 1
                  },
                  "subtreeRaising" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "useLaplace" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "Bagging meta algorithm" : "https://en.wikipedia.org/wiki/Bootstrap_aggregating"
        },
        "x-orn-@id" : "/algorithm/J48/bagging"
      }
    },
    "/algorithm/M5P" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to WEKA M5P classifier.",
        "description" : "REST interface to WEKA M5P classifier. Returns a Task URI.",
        "operationId" : "algorithmM5PPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useUnsmoothed" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "minNumInstances" : {
                    "type" : "number",
                    "format" : "double",
                    "default" : 4
                  },
                  "buildRegressionTree" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "M5P" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/trees/M5P.html"
        },
        "x-orn-@id" : "/algorithm/M5P"
      }
    },
    "/algorithm/M5P/adaboost" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to WEKA AdaBoost M1 with M5P classifier.",
        "description" : "REST interface to WEKA AdaBoost M1 with M5P classifier. Returns a Task URI.",
        "operationId" : "algorithmM5PAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useUnsmoothed" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "minNumInstances" : {
                    "type" : "number",
                    "format" : "double",
                    "default" : 4
                  },
                  "buildRegressionTree" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "M5P" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/trees/M5P.html"
        },
        "x-orn-@id" : "/algorithm/M5P/adaboost"
      }
    },
    "/algorithm/M5P/bagging" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to WEKA Bagging with M5P classifier.",
        "description" : "REST interface to WEKA Bagging with M5P classifier. Returns a Task URI.",
        "operationId" : "algorithmM5PBaggingPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "bagSizePercent" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 10
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "useUnsmoothed" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "minNumInstances" : {
                    "type" : "number",
                    "format" : "double",
                    "default" : 4
                  },
                  "buildRegressionTree" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "M5P" : "http://weka.sourceforge.net/doc.dev/weka/classifiers/trees/M5P.html"
        },
        "x-orn-@id" : "/algorithm/M5P/bagging"
      }
    },
    "/algorithm/DecisionStump" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA DecisionStump classifier.",
        "description" : "REST interface to the DecisionStump classifier. Returns a Task URI.",
        "operationId" : "algorithmDecisionStumpPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "DecisionStump" : "https://en.wikipedia.org/wiki/Decision_stump"
        },
        "x-orn-@id" : "/algorithm/DecisionStump"
      }
    },
    "/algorithm/DecisionStump/adaboost" : {
      "post" : {
        "tags" : [ "algorithm", "meta algorithm" ],
        "summary" : "REST interface to the WEKA AdaBoost M1 with DecisionStump classifier.",
        "description" : "REST interface to the WEKA AdaBoost M1 with DecisionStump classifier. Returns a Task URI.",
        "operationId" : "algorithmDecisionStumpAdaBoostPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "batchSize" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "numIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 10
                  },
                  "useResampling" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "weightThreshold" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "DecisionStump" : "https://en.wikipedia.org/wiki/Decision_stump"
        },
        "x-orn-@id" : "/algorithm/DecisionStump/adaboost"
      }
    },
    "/algorithm/J48" : {
      "post" : {
        "tags" : [ "algorithm" ],
        "summary" : "REST interface to the WEKA J48 classifier.",
        "description" : "REST interface to the WEKA J48 classifier. Returns a Task URI.",
        "operationId" : "algorithmJ48Post",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "binarySplits" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "confidenceFactor" : {
                    "type" : "number",
                    "default" : 0.25
                  },
                  "minNumObj" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 2
                  },
                  "numFolds" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 3
                  },
                  "reducedErrorPruning" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 0
                  },
                  "seed" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 1
                  },
                  "subtreeRaising" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "unpruned" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 1
                  },
                  "useLaplace" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1 ],
                    "default" : 0
                  },
                  "validation" : {
                    "type" : "string",
                    "enum" : [ "CrossValidation", "Hold-Out" ],
                    "default" : "CrossValidation"
                  },
                  "validationNum" : {
                    "type" : "number",
                    "format" : "double",
                    "example" : 10,
                    "default" : 10
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-algorithm" : {
          "J48" : "https://en.wikipedia.org/wiki/C4.5_algorithm#Implementations"
        },
        "x-orn-@id" : "/algorithm/J48"
      }
    },
    "/aa/login" : {
      "post" : {
        "tags" : [ "authorization" ],
        "summary" : "Uses OpenAM server to get a security token.",
        "description" : "Request a security token.",
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "username" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/aa/logout" : {
      "post" : {
        "tags" : [ "authorization" ],
        "summary" : "Invalidates a security token and logs out the corresponding user.",
        "description" : "Invalidate a security token.",
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/cluster/EM" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "REST interface to the WEKA EM clusterer.",
        "description" : "REST interface to the WEKA EM (expectation maximisation) clusterer.",
        "operationId" : "clusterEMPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "numFolds" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 10
                  },
                  "numKMeansRuns" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 10
                  },
                  "maximumNumberOfClusters" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : -1
                  },
                  "numClusters" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : -1
                  },
                  "maxIterations" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 100
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Cluster"
        },
        "x-algorithm" : {
          "EM" : "https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm"
        },
        "x-orn-@id" : "/cluster/EM"
      }
    },
    "/cluster/SimpleKMeans" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "REST interface to the WEKA SimpleKMeans clusterer.",
        "description" : "REST interface to the WEKA SimpleKMeans clusterer.",
        "operationId" : "clusterSimpleKMeansPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "canopyMaxNumCanopiesToHoldInMemory" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "canopyMinimumCanopyDensity" : {
                    "type" : "number",
                    "format" : "double"
                  },
                  "canopyPeriodicPruningRate" : {
                    "type" : "number",
                    "format" : "double"
                  },
                  "canopyT1" : {
                    "type" : "number",
                    "format" : "double"
                  },
                  "canopyT2" : {
                    "type" : "number",
                    "format" : "double"
                  },
                  "displayStdDevs" : {
                    "type" : "boolean"
                  },
                  "distanceFunction" : {
                    "type" : "string"
                  },
                  "dontReplaceMissingValues" : {
                    "type" : "boolean"
                  },
                  "fastDistanceCalc" : {
                    "type" : "boolean"
                  },
                  "initializationMethod" : {
                    "type" : "integer",
                    "format" : "int32",
                    "enum" : [ 0, 1, 2, 3 ],
                    "default" : 0
                  },
                  "maxIterations" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "numClusters" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "numExecutionSlots" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "preserveInstancesOrder" : {
                    "type" : "boolean"
                  },
                  "reduceNumberOfDistanceCalcsViaCanopies" : {
                    "type" : "boolean"
                  },
                  "seed" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Cluster"
        },
        "x-algorithm" : {
          "SimpleKMeans" : "http://weka.sourceforge.net/doc.dev/weka/clusterers/SimpleKMeans.html"
        },
        "x-orn-@id" : "/cluster/EM"
      }
    },
    "/cluster/Hierarchical" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "REST interface to the WEKA Hierarchical clusterer.",
        "description" : "REST interface to the WEKA Hierarchical clusterer.",
        "operationId" : "clusterHierarchicalPost",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetUri" : {
                    "type" : "string"
                  },
                  "printNewick" : {
                    "type" : "boolean"
                  },
                  "numClusters" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : 1
                  },
                  "linkType" : {
                    "type" : "string",
                    "enum" : [ "SINGLE", "COMPLETE", "ADJCOMPLETE", "AVERAGE", "MEAN", "CENTROID", "WARD", "NEIGHBOR_JOINING" ],
                    "default" : "SINGLE"
                  },
                  "distanceIsBranchLength" : {
                    "type" : "boolean"
                  },
                  "distanceFunction" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Algorithm",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Cluster"
        },
        "x-algorithm" : {
          "SimpleKMeans" : "http://weka.sourceforge.net/doc.dev/weka/clusterers/HierarchicalClusterer.html"
        },
        "x-orn-@id" : "/cluster/Hierarchical"
      }
    },
    "/dataset/{id}" : {
      "get" : {
        "tags" : [ "dataset" ],
        "summary" : "Get arff representation of a dataset.",
        "description" : "Get arff representation of a dataset.",
        "operationId" : "getDatasetArff",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Dataset ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Dataset",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:ID"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Arff"
        },
        "x-orn-@id" : "/dataset/{id}"
      },
      "post" : {
        "tags" : [ "dataset" ],
        "summary" : "Filter an internal dataset with weka filter.",
        "description" : "Filter an internal dataset with weka filter. Remove attributes and normalize or standardize all numeric attributes of a dataset. Change String to Nominal. Or Discretize attributes. Save the dataset by POST request the content-type text/uri-list.",
        "operationId" : "filter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Dataset ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "idx_remove" : {
                    "type" : "string",
                    "default" : "0"
                  },
                  "scale" : {
                    "type" : "string"
                  },
                  "translation" : {
                    "type" : "string"
                  },
                  "standardize" : {
                    "type" : "boolean"
                  },
                  "ignore" : {
                    "type" : "boolean"
                  },
                  "attributeRange" : {
                    "type" : "string"
                  },
                  "attributeIndicies" : {
                    "type" : "string"
                  },
                  "bins" : {
                    "type" : "integer",
                    "format" : "int32"
                  },
                  "useEqualFrequency" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Dataset",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:ID"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn-@id" : "/dataset/{id}"
      }
    },
    "/dataset" : {
      "get" : {
        "tags" : [ "dataset" ],
        "summary" : "List all converted datasets.",
        "description" : "List all converted datasets.",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:URIList",
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:URIList"
        },
        "x-orn-@id" : "/dataset"
      },
      "post" : {
        "tags" : [ "dataset" ],
        "summary" : "Download dataset and convert into weka arff format.",
        "description" : "Download an external dataset and convert it into weka arff format. Save the dataset by POST request the content-type text/uri-list.",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "dataset_uri" : {
                    "type" : "string"
                  },
                  "class_uri" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Dataset",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:URI"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn-@id" : "/dataset"
      }
    },
    "/model" : {
      "get" : {
        "tags" : [ "model" ],
        "summary" : "List all Models",
        "description" : "List all Models.",
        "operationId" : "getModelList",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Model",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:void"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:ModelList"
        },
        "x-orn-@id" : "/model"
      }
    },
    "/model/{id}" : {
      "get" : {
        "tags" : [ "model" ],
        "summary" : "Get representation of a model.",
        "description" : "Get representation of a model.",
        "operationId" : "getModel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "model ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Model",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:ModelId"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Model"
        },
        "x-orn-@id" : "/model/{id}"
      },
      "post" : {
        "tags" : [ "model" ],
        "summary" : "Predict testdata with a model.",
        "description" : "Predict testdata with a model.",
        "operationId" : "modelPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "model ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  },
                  "datasetID" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/x-arff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Model",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:Dataset"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Prediction"
        },
        "x-orn-@id" : "/model/{id}"
      }
    },
    "/task/{id}" : {
      "get" : {
        "tags" : [ "task" ],
        "summary" : "Get json representation of a task.",
        "description" : "Get json representation of a task.",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:Task",
        "x-orn:expects" : {
          "x-orn-@id" : "x-orn:ID"
        },
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:Task"
        },
        "x-orn-@id" : "/task/{id}"
      }
    },
    "/task" : {
      "get" : {
        "tags" : [ "task" ],
        "summary" : "List all tasks.",
        "description" : "List all tasks.",
        "operationId" : "list_1",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "header",
          "description" : "Authorization token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "x-orn-@type" : "x-orn:URIList",
        "x-orn:returns" : {
          "x-orn-@id" : "x-orn:URIList"
        },
        "x-orn-@id" : "/task"
      }
    }
  },
  "components" : {
    "schemas" : {
      "FormDataContentDisposition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "fileName" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        }
      }
    }
  },
  "x-orn-@type" : "Service",
  "x-orn-@context" : {
    "@vocab" : "http://openrisknet.org/schema#",
    "orn-@id" : "@id",
    "orn" : "http://openrisknet.org/schema#",
    "orn-@type" : "@type"
  },
  "x-orn-@id" : "https://jguweka.prod.openrisknet.org"
}
